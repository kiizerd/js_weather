/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/cardinal-direction/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/cardinal-direction/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.cardinalConverter = exports.degreeFromCardinal = exports.cardinalFromDegree = exports.CardinalSubset = exports.CardinalDirection = void 0;
const CardinalIncrement = 11.25;
function cardinalIntFromDegree(degree) {
    const int = Math.round(degree / CardinalIncrement);
    return int > 31 ? 0 : int;
}
function ensureProperType(value, block) {
    if (typeof value === "string") {
        return block[value];
    }
    else {
        return block[block[value]];
    }
}
function cardinalFromIntSubset(cardinalInt, cardinalSubset) {
    const subset = ensureProperType(cardinalSubset, CardinalSubset);
    const int = Math.round(cardinalInt / subset) * subset;
    return CardinalDirection[int > 32 - subset + subset / 2 ? 0 : int];
}
var CardinalTitle;
(function (CardinalTitle) {
    CardinalTitle[CardinalTitle["North"] = 0] = "North";
    CardinalTitle[CardinalTitle["North by East"] = 1] = "North by East";
    CardinalTitle[CardinalTitle["North Northeast"] = 2] = "North Northeast";
    CardinalTitle[CardinalTitle["Northeast by North"] = 3] = "Northeast by North";
    CardinalTitle[CardinalTitle["Northeast"] = 4] = "Northeast";
    CardinalTitle[CardinalTitle["Northeast by East"] = 5] = "Northeast by East";
    CardinalTitle[CardinalTitle["East Northeast"] = 6] = "East Northeast";
    CardinalTitle[CardinalTitle["East by North"] = 7] = "East by North";
    CardinalTitle[CardinalTitle["East"] = 8] = "East";
    CardinalTitle[CardinalTitle["East by South"] = 9] = "East by South";
    CardinalTitle[CardinalTitle["East Southeast"] = 10] = "East Southeast";
    CardinalTitle[CardinalTitle["Southeast by East"] = 11] = "Southeast by East";
    CardinalTitle[CardinalTitle["Southeast"] = 12] = "Southeast";
    CardinalTitle[CardinalTitle["Southeast by South"] = 13] = "Southeast by South";
    CardinalTitle[CardinalTitle["South Southeast"] = 14] = "South Southeast";
    CardinalTitle[CardinalTitle["South by East"] = 15] = "South by East";
    CardinalTitle[CardinalTitle["South"] = 16] = "South";
    CardinalTitle[CardinalTitle["South by West"] = 17] = "South by West";
    CardinalTitle[CardinalTitle["South Southwest"] = 18] = "South Southwest";
    CardinalTitle[CardinalTitle["Southwest by South"] = 19] = "Southwest by South";
    CardinalTitle[CardinalTitle["Southwest"] = 20] = "Southwest";
    CardinalTitle[CardinalTitle["Southwest by West"] = 21] = "Southwest by West";
    CardinalTitle[CardinalTitle["West Southwest"] = 22] = "West Southwest";
    CardinalTitle[CardinalTitle["West by South"] = 23] = "West by South";
    CardinalTitle[CardinalTitle["West"] = 24] = "West";
    CardinalTitle[CardinalTitle["West by North"] = 25] = "West by North";
    CardinalTitle[CardinalTitle["West Northwest"] = 26] = "West Northwest";
    CardinalTitle[CardinalTitle["Northwest by West"] = 27] = "Northwest by West";
    CardinalTitle[CardinalTitle["Northwest"] = 28] = "Northwest";
    CardinalTitle[CardinalTitle["Northwest by North"] = 29] = "Northwest by North";
    CardinalTitle[CardinalTitle["North Northwest"] = 30] = "North Northwest";
    CardinalTitle[CardinalTitle["North by West"] = 31] = "North by West";
})(CardinalTitle || (CardinalTitle = {}));
/**
 * There are 32 cardinal-type direction on a compass.
 * - This numeric enum is `0` indexed.
 */
var CardinalDirection;
(function (CardinalDirection) {
    CardinalDirection[CardinalDirection["N"] = 0] = "N";
    CardinalDirection[CardinalDirection["NbE"] = 1] = "NbE";
    CardinalDirection[CardinalDirection["NNE"] = 2] = "NNE";
    CardinalDirection[CardinalDirection["NEbN"] = 3] = "NEbN";
    CardinalDirection[CardinalDirection["NE"] = 4] = "NE";
    CardinalDirection[CardinalDirection["NEbE"] = 5] = "NEbE";
    CardinalDirection[CardinalDirection["ENE"] = 6] = "ENE";
    CardinalDirection[CardinalDirection["EbN"] = 7] = "EbN";
    CardinalDirection[CardinalDirection["E"] = 8] = "E";
    CardinalDirection[CardinalDirection["EbS"] = 9] = "EbS";
    CardinalDirection[CardinalDirection["ESE"] = 10] = "ESE";
    CardinalDirection[CardinalDirection["SEbE"] = 11] = "SEbE";
    CardinalDirection[CardinalDirection["SE"] = 12] = "SE";
    CardinalDirection[CardinalDirection["SEbS"] = 13] = "SEbS";
    CardinalDirection[CardinalDirection["SSE"] = 14] = "SSE";
    CardinalDirection[CardinalDirection["SbE"] = 15] = "SbE";
    CardinalDirection[CardinalDirection["S"] = 16] = "S";
    CardinalDirection[CardinalDirection["SbW"] = 17] = "SbW";
    CardinalDirection[CardinalDirection["SSW"] = 18] = "SSW";
    CardinalDirection[CardinalDirection["SWbS"] = 19] = "SWbS";
    CardinalDirection[CardinalDirection["SW"] = 20] = "SW";
    CardinalDirection[CardinalDirection["SWbW"] = 21] = "SWbW";
    CardinalDirection[CardinalDirection["WSW"] = 22] = "WSW";
    CardinalDirection[CardinalDirection["WbS"] = 23] = "WbS";
    CardinalDirection[CardinalDirection["W"] = 24] = "W";
    CardinalDirection[CardinalDirection["WbN"] = 25] = "WbN";
    CardinalDirection[CardinalDirection["WNW"] = 26] = "WNW";
    CardinalDirection[CardinalDirection["NWbW"] = 27] = "NWbW";
    CardinalDirection[CardinalDirection["NW"] = 28] = "NW";
    CardinalDirection[CardinalDirection["NWbN"] = 29] = "NWbN";
    CardinalDirection[CardinalDirection["NNW"] = 30] = "NNW";
    CardinalDirection[CardinalDirection["NbW"] = 31] = "NbW";
})(CardinalDirection = exports.CardinalDirection || (exports.CardinalDirection = {}));
/**
 * Used to restrict the type of cardinal direction that can be returned by `cardinalFromDegree`. When a subset is specified the degree will be pushed the the nearest acceptable cardinal.
 * @member Full - All directions can be returned. ___[DEFAULT]___
 * @member Basic - Specifies only basic _(N,E,S,W)_ can be returned.
 * @member Ordinal - Extends on `Basic`, allowing _(NE,SE etc..)_ to be returned.
 * @member Intercardinal - Extends on `Ordinal, allowing _(NNE,ENE etc...)_ to re returned.
 */
var CardinalSubset;
(function (CardinalSubset) {
    CardinalSubset[CardinalSubset["Full"] = 1] = "Full";
    CardinalSubset[CardinalSubset["Basic"] = 8] = "Basic";
    CardinalSubset[CardinalSubset["Ordinal"] = 4] = "Ordinal";
    CardinalSubset[CardinalSubset["Intercardinal"] = 2] = "Intercardinal";
})(CardinalSubset = exports.CardinalSubset || (exports.CardinalSubset = {}));
/**
 * Converts a compass degree [0-360] into its correlated cardinal direction.
 * @param degree - The compass degree to covert [0-360].
 * @param subset - _[optional]_ Specifies the type of cardinal that can be returned. See `CardinalSubset` enum for details.
 * @return [string] A `CardinalDirection` enum member value.
 */
function cardinalFromDegree(degree, subset) {
    const int = cardinalIntFromDegree(degree);
    return subset ? cardinalFromIntSubset(int, subset) : CardinalDirection[int];
}
exports.cardinalFromDegree = cardinalFromDegree;
/**
 * Converts a cardinal direction into its correlated compass degree value.
 * @param cardinal - One of the `CardinalDirection` enum member values.
 * @return [number] A compas degree between [0-360].
 */
function degreeFromCardinal(cardinal) {
    const cardinalInt = ensureProperType(cardinal, CardinalDirection);
    return CardinalIncrement * cardinalInt;
}
exports.degreeFromCardinal = degreeFromCardinal;
/**
 * Takes a cardinal value and converts it to either its abbreviation or full title.
 * Integer representations are explicitly converted to cardinal abbreviations.
 * See the `Cardinal Table` in the README for context.
 * @param cardinal - One of the `CardinalDirection` enum member values, or its full title.
 * @returns [string] The converted cardinal value.
 */
function cardinalConverter(cardinal) {
    if (typeof cardinal === "number")
        return CardinalDirection[cardinal];
    return CardinalDirection[cardinal] !== undefined
        ? CardinalTitle[CardinalDirection[cardinal]]
        : CardinalDirection[CardinalTitle[cardinal]];
}
exports.cardinalConverter = cardinalConverter;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles/main.scss":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles/main.scss ***!
  \***********************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
// Imports



var ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! ../media/cloud_mountain_bg.jpg */ "./src/media/cloud_mountain_bg.jpg"), __webpack_require__.b);
var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n/* Document\n   ========================================================================== */\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\nhtml {\n  line-height: 1.15;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n/**\n * Remove the margin in all browsers.\n */\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Remove the gray background on active links in IE 10.\n */\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  text-decoration: underline dotted;\n  /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10.\n */\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=button]::-moz-focus-inner,\n[type=reset]::-moz-focus-inner,\n[type=submit]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=button]:-moz-focusring,\n[type=reset]:-moz-focusring,\n[type=submit]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n[type=checkbox],\n[type=radio] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=number]::-webkit-inner-spin-button,\n[type=number]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=search] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n/**\n * Add the correct display in IE 10+.\n */\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n[hidden] {\n  display: none;\n}\n\n/* Global variables. */\n:root {\n  /* Set sans-serif & mono fonts */\n  --sans-font: -apple-system, BlinkMacSystemFont, \"Avenir Next\", Avenir,\n    \"Nimbus Sans L\", Roboto, Noto, \"Segoe UI\", Arial, Helvetica,\n    \"Helvetica Neue\", sans-serif;\n  --mono-font: Consolas, Menlo, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n  /* Default (light) theme */\n  --bg: #fff;\n  --accent-bg: #f5f7ff;\n  --text: #212121;\n  --text-light: #585858;\n  --border: #d8dae1;\n  --accent: #0d47a1;\n  --code: #d81b60;\n  --preformatted: #444;\n  --marked: #ffdd33;\n  --disabled: #efefef;\n}\n\n/* Dark theme */\n@media (prefers-color-scheme: dark) {\n  :root {\n    --bg: #212121;\n    --accent-bg: #2b2b2b;\n    --text: #dcdcdc;\n    --text-light: #ababab;\n    --border: #666;\n    --accent: #ffb300;\n    --code: #f06292;\n    --preformatted: #ccc;\n    --disabled: #111;\n  }\n\n  /* Add a bit of transparancy so light media isn't so glaring in dark mode */\n  img,\nvideo {\n    opacity: 0.8;\n  }\n}\nhtml {\n  /* Set the font globally */\n  font-family: var(--sans-font);\n  scroll-behavior: smooth;\n}\n\n/* Make the body a nice central block */\nbody {\n  color: var(--text);\n  background: var(--bg);\n  font-size: 1.15rem;\n  line-height: 1.5;\n  display: grid;\n  grid-template-columns: 1fr min(45rem, 90%) 1fr;\n  margin: 0;\n}\n\nbody > * {\n  grid-column: 2;\n}\n\n/* Make the header bg full width, but the content inline with body */\nbody > header {\n  background: var(--accent-bg);\n  border-bottom: 1px solid var(--border);\n  text-align: center;\n  padding: 0 0.5rem 2rem 0.5rem;\n  grid-column: 1/-1;\n  box-sizing: border-box;\n}\n\nbody > header h1 {\n  max-width: 1200px;\n  margin: 1rem auto;\n}\n\nbody > header p {\n  max-width: 40rem;\n  margin: 1rem auto;\n}\n\n/* Add a little padding to ensure spacing is correct between content and nav */\nmain {\n  padding-top: 1.5rem;\n}\n\nbody > footer {\n  margin-top: 4rem;\n  padding: 2rem 1rem 1.5rem 1rem;\n  color: var(--text-light);\n  font-size: 0.9rem;\n  text-align: center;\n  border-top: 1px solid var(--border);\n}\n\n/* Format headers */\nh1 {\n  font-size: 3rem;\n}\n\nh2 {\n  font-size: 2.6rem;\n  margin-top: 3rem;\n}\n\nh3 {\n  font-size: 2rem;\n  margin-top: 3rem;\n}\n\nh4 {\n  font-size: 1.44rem;\n}\n\nh5 {\n  font-size: 1.15rem;\n}\n\nh6 {\n  font-size: 0.96rem;\n}\n\n/* Fix line height when title wraps */\nh1,\nh2,\nh3 {\n  line-height: 1.1;\n}\n\n/* Reduce header size on mobile */\n@media only screen and (max-width: 720px) {\n  h1 {\n    font-size: 2.5rem;\n  }\n\n  h2 {\n    font-size: 2.1rem;\n  }\n\n  h3 {\n    font-size: 1.75rem;\n  }\n\n  h4 {\n    font-size: 1.25rem;\n  }\n}\n/* Format links & buttons */\na,\na:visited {\n  color: var(--accent);\n}\n\na:hover {\n  text-decoration: none;\n}\n\nbutton,\n[role=button],\ninput[type=submit],\ninput[type=reset],\ninput[type=button] {\n  border: none;\n  border-radius: 5px;\n  background: var(--accent);\n  font-size: 1rem;\n  color: var(--bg);\n  padding: 0.7rem 0.9rem;\n  margin: 0.5rem 0;\n}\n\nbutton[disabled],\n[role=button][aria-disabled=true],\ninput[type=submit][disabled],\ninput[type=reset][disabled],\ninput[type=button][disabled],\ninput[type=checkbox][disabled],\ninput[type=radio][disabled],\nselect[disabled] {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\ninput:disabled,\ntextarea:disabled,\nselect:disabled {\n  cursor: not-allowed;\n  background-color: var(--disabled);\n}\n\ninput[type=range] {\n  padding: 0;\n}\n\n/* Set the cursor to '?' while hovering over an abbreviation */\nabbr {\n  cursor: help;\n}\n\nbutton:focus,\nbutton:enabled:hover,\n[role=button]:focus,\n[role=button]:not([aria-disabled=true]):hover,\ninput[type=submit]:focus,\ninput[type=submit]:enabled:hover,\ninput[type=reset]:focus,\ninput[type=reset]:enabled:hover,\ninput[type=button]:focus,\ninput[type=button]:enabled:hover {\n  filter: brightness(1.4);\n  cursor: pointer;\n}\n\n/* Format navigation */\nnav {\n  font-size: 1rem;\n  line-height: 2;\n  padding: 1rem 0 0 0;\n}\n\n/* Use flexbox to allow items to wrap, as needed */\nnav ul,\nnav ol {\n  align-content: space-around;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n}\n\n/* List items are inline elements, make them behave more like blocks */\nnav ul li,\nnav ol li {\n  display: inline-block;\n}\n\nnav a,\nnav a:visited {\n  margin: 0 1rem 1rem 0;\n  border: 1px solid var(--border);\n  border-radius: 5px;\n  color: var(--text);\n  display: inline-block;\n  padding: 0.1rem 1rem;\n  text-decoration: none;\n}\n\nnav a:hover {\n  color: var(--accent);\n  border-color: var(--accent);\n}\n\nnav a:last-child {\n  margin-right: 0;\n}\n\n/* Reduce nav side on mobile */\n@media only screen and (max-width: 720px) {\n  nav a {\n    border: none;\n    padding: 0;\n    color: var(--accent);\n    text-decoration: underline;\n    line-height: 1;\n  }\n}\n/* Format the expanding box */\ndetails {\n  background: var(--accent-bg);\n  border: 1px solid var(--border);\n  border-radius: 5px;\n  margin-bottom: 1rem;\n}\n\nsummary {\n  cursor: pointer;\n  font-weight: bold;\n  padding: 0.6rem 1rem;\n}\n\ndetails[open] {\n  padding: 0.6rem 1rem 0.75rem 1rem;\n}\n\ndetails[open] summary + * {\n  margin-top: 0;\n}\n\ndetails[open] summary {\n  margin-bottom: 0.5rem;\n  padding: 0;\n}\n\ndetails[open] > *:last-child {\n  margin-bottom: 0;\n}\n\n/* Format tables */\ntable {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1.5rem 0;\n}\n\ntd,\nth {\n  border: 1px solid var(--border);\n  text-align: left;\n  padding: 0.5rem;\n}\n\nth {\n  background: var(--accent-bg);\n  font-weight: bold;\n}\n\ntr:nth-child(even) {\n  /* Set every other cell slightly darker. Improves readability. */\n  background: var(--accent-bg);\n}\n\ntable caption {\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n}\n\n/* Format forms */\ntextarea,\nselect,\ninput {\n  font-size: inherit;\n  font-family: inherit;\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n  color: var(--text);\n  background: var(--bg);\n  border: 1px solid var(--border);\n  border-radius: 5px;\n  box-shadow: none;\n  box-sizing: border-box;\n  width: 60%;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n}\n\n/* Add arrow to drop-down */\nselect {\n  background-image: linear-gradient(45deg, transparent 49%, var(--text) 51%), linear-gradient(135deg, var(--text) 51%, transparent 49%);\n  background-position: calc(100% - 20px), calc(100% - 15px);\n  background-size: 5px 5px, 5px 5px;\n  background-repeat: no-repeat;\n}\n\nselect[multiple] {\n  background-image: none !important;\n}\n\n/* checkbox and radio button style */\ninput[type=checkbox],\ninput[type=radio] {\n  vertical-align: bottom;\n  position: relative;\n}\n\ninput[type=radio] {\n  border-radius: 100%;\n}\n\ninput[type=checkbox]:checked,\ninput[type=radio]:checked {\n  background: var(--accent);\n}\n\ninput[type=checkbox]:checked::after {\n  /* Creates a rectangle with colored right and bottom borders which is rotated to look like a check mark */\n  content: \" \";\n  width: 0.1em;\n  height: 0.25em;\n  border-radius: 0;\n  position: absolute;\n  top: 0.05em;\n  left: 0.18em;\n  background: transparent;\n  border-right: solid var(--bg) 0.08em;\n  border-bottom: solid var(--bg) 0.08em;\n  font-size: 1.8em;\n  transform: rotate(45deg);\n}\n\ninput[type=radio]:checked::after {\n  /* creates a colored circle for the checked radio button  */\n  content: \" \";\n  width: 0.25em;\n  height: 0.25em;\n  border-radius: 100%;\n  position: absolute;\n  top: 0.125em;\n  background: var(--bg);\n  left: 0.125em;\n  font-size: 32px;\n}\n\n/* Make the textarea wider than other inputs */\ntextarea {\n  width: 80%;\n}\n\n/* Makes input fields wider on smaller screens */\n@media only screen and (max-width: 720px) {\n  textarea,\nselect,\ninput {\n    width: 100%;\n  }\n}\n/* Ensures the checkbox and radio inputs do not have a set width like other input fields */\ninput[type=checkbox],\ninput[type=radio] {\n  width: auto;\n}\n\n/* do not show border around file selector button */\ninput[type=file] {\n  border: 0;\n}\n\n/* Misc body elements */\nhr {\n  color: var(--border);\n  border-top: 1px;\n  margin: 1rem auto;\n}\n\nmark {\n  padding: 2px 5px;\n  border-radius: 4px;\n  background: var(--marked);\n}\n\nmain img,\nmain video {\n  max-width: 100%;\n  height: auto;\n  border-radius: 5px;\n}\n\nfigure {\n  margin: 0;\n  text-align: center;\n}\n\nfigcaption {\n  font-size: 0.9rem;\n  color: var(--text-light);\n  margin-bottom: 1rem;\n}\n\nblockquote {\n  margin: 2rem 0 2rem 2rem;\n  padding: 0.4rem 0.8rem;\n  border-left: 0.35rem solid var(--accent);\n  color: var(--text-light);\n  font-style: italic;\n}\n\ncite {\n  font-size: 0.9rem;\n  color: var(--text-light);\n  font-style: normal;\n}\n\n/* Use mono font for code elements */\ncode,\npre,\npre span,\nkbd,\nsamp {\n  font-family: var(--mono-font);\n  color: var(--code);\n}\n\nkbd {\n  color: var(--preformatted);\n  border: 1px solid var(--preformatted);\n  border-bottom: 3px solid var(--preformatted);\n  border-radius: 5px;\n  padding: 0.1rem 0.4rem;\n}\n\npre {\n  padding: 1rem 1.4rem;\n  max-width: 100%;\n  overflow: auto;\n  color: var(--preformatted);\n  background: var(--accent-bg);\n  border: 1px solid var(--border);\n  border-radius: 5px;\n}\n\n/* Fix embedded code within pre */\npre code {\n  color: var(--preformatted);\n  background: none;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background: url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");\n  overflow: hidden;\n  background-size: cover;\n}\n\nheader {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 8px;\n}\n\nheader > time {\n  position: absolute;\n  top: 1rem;\n  left: 1rem;\n}\n\nmain {\n  margin: 0 auto 0 auto;\n  padding: 0 8px 6px 8px;\n  height: 100%;\n  background-color: rgba(18, 93, 168, 0.781);\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  box-shadow: 2px 0px 2px rgba(9, 54, 100, 0.781), 0px 3px 1px rgba(9, 54, 100, 0.781);\n}\n\nform {\n  display: flex;\n  justify-content: center;\n  padding: 8px 1rem;\n  position: absolute;\n  top: 3rem;\n  left: 0;\n}\n\ninput {\n  width: 100%;\n}\n\nbutton {\n  margin: 2px 6px 10px;\n  padding: 0 10px;\n}\n\n#current-weather {\n  display: flex;\n  justify-content: flex-start;\n}\n\nfigcaption {\n  color: var(--text);\n}\n\n#current-temps {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  margin: 8rem 8rem 10rem 0;\n}\n\nh6 {\n  margin-bottom: 8px;\n}\n\n#current-details {\n  display: flex;\n  flex-direction: column;\n}\n\n#daily-forecast {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  font-size: 17px;\n}\n\n#daily-forecast > h4 {\n  flex-grow: 2;\n  width: 100%;\n  margin: 2px 0 16px;\n}\n\n.day-div {\n  display: flex;\n  flex-direction: column;\n  width: 15%;\n  margin: 0 auto;\n}", "",{"version":3,"sources":["webpack://./src/styles/normalize.scss","webpack://./src/styles/main.scss","webpack://./src/styles/simplecss.scss","webpack://./src/styles/base.scss"],"names":[],"mappings":"AAAA,2EAAA;AAEA;+EAAA;AAGA;;;EAAA;AAKC;EACC,iBAAA;EAAmB,MAAA;EACnB,8BAAA;EAAgC,MAAA;ACAlC;;ADGA;+EAAA;AAGA;;EAAA;AAIA;EACE,SAAA;ACFF;;ADKA;;EAAA;AAIA;EACE,cAAA;ACHF;;ADMA;;;EAAA;AAKA;EACE,cAAA;EACA,gBAAA;ACJF;;ADOA;+EAAA;AAGA;;;EAAA;AAKA;EACE,uBAAA;EAAyB,MAAA;EACzB,SAAA;EAAW,MAAA;EACX,iBAAA;EAAmB,MAAA;ACHrB;;ADMA;;;EAAA;AAKA;EACE,iCAAA;EAAmC,MAAA;EACnC,cAAA;EAAgB,MAAA;ACFlB;;ADKA;+EAAA;AAGA;;EAAA;AAIA;EACE,6BAAA;ACJF;;ADOA;;;EAAA;AAKA;EACE,mBAAA;EAAqB,MAAA;EACrB,0BAAA;EAA4B,MAAA;EAC5B,iCAAA;EAAmC,MAAA;ACFrC;;ADKA;;EAAA;AAIA;;EAEE,mBAAA;ACHF;;ADMA;;;EAAA;AAKA;;;EAGE,iCAAA;EAAmC,MAAA;EACnC,cAAA;EAAgB,MAAA;ACFlB;;ADKA;;EAAA;AAIA;EACE,cAAA;ACHF;;ADMA;;;EAAA;AAKA;;EAEE,cAAA;EACA,cAAA;EACA,kBAAA;EACA,wBAAA;ACJF;;ADOA;EACE,eAAA;ACJF;;ADOA;EACE,WAAA;ACJF;;ADOA;+EAAA;AAGA;;EAAA;AAIA;EACE,kBAAA;ACNF;;ADSA;+EAAA;AAGA;;;EAAA;AAKA;;;;;EAKE,oBAAA;EAAsB,MAAA;EACtB,eAAA;EAAiB,MAAA;EACjB,iBAAA;EAAmB,MAAA;EACnB,SAAA;EAAW,MAAA;ACJb;;ADOA;;;EAAA;AAKA;;EACQ,MAAA;EACN,iBAAA;ACJF;;ADOA;;;EAAA;AAKA;;EACS,MAAA;EACP,oBAAA;ACJF;;ADOA;;EAAA;AAIA;;;;EAIE,0BAAA;ACLF;;ADQA;;EAAA;AAIA;;;;EAIE,kBAAA;EACA,UAAA;ACNF;;ADSA;;EAAA;AAIA;;;;EAIE,8BAAA;ACPF;;ADUA;;EAAA;AAIA;EACE,8BAAA;ACRF;;ADWA;;;;;EAAA;AAOA;EACE,sBAAA;EAAwB,MAAA;EACxB,cAAA;EAAgB,MAAA;EAChB,cAAA;EAAgB,MAAA;EAChB,eAAA;EAAiB,MAAA;EACjB,UAAA;EAAY,MAAA;EACZ,mBAAA;EAAqB,MAAA;ACHvB;;ADMA;;EAAA;AAIA;EACE,wBAAA;ACJF;;ADOA;;EAAA;AAIA;EACE,cAAA;ACLF;;ADQA;;;EAAA;AAKA;;EAEE,sBAAA;EAAwB,MAAA;EACxB,UAAA;EAAY,MAAA;ACJd;;ADOA;;EAAA;AAIA;;EAEE,YAAA;ACLF;;ADQA;;;EAAA;AAKA;EACE,6BAAA;EAA+B,MAAA;EAC/B,oBAAA;EAAsB,MAAA;ACJxB;;ADOA;;EAAA;AAIA;EACE,wBAAA;ACLF;;ADQA;;;EAAA;AAKA;EACE,0BAAA;EAA4B,MAAA;EAC5B,aAAA;EAAe,MAAA;ACJjB;;ADOA;+EAAA;AAGA;;EAAA;AAIA;EACE,cAAA;ACNF;;ADSA;;EAAA;AAIA;EACE,kBAAA;ACPF;;ADUA;+EAAA;AAGA;;EAAA;AAIA;EACE,aAAA;ACTF;;ADYA;;EAAA;AAIA;EACE,aAAA;ACVF;;ACjVA,sBAAA;AACA;EACE,gCAAA;EACA;;gCAAA;EAGA,6EAAA;EAEA,0BAAA;EACA,UAAA;EACA,oBAAA;EACA,eAAA;EACA,qBAAA;EACA,iBAAA;EACA,iBAAA;EACA,eAAA;EACA,oBAAA;EACA,iBAAA;EACA,mBAAA;ADmVF;;AChVA,eAAA;AACA;EACE;IACE,aAAA;IACA,oBAAA;IACA,eAAA;IACA,qBAAA;IACA,cAAA;IACA,iBAAA;IACA,eAAA;IACA,oBAAA;IACA,gBAAA;EDmVF;;ECjVA,2EAAA;EACA;;IAEE,YAAA;EDoVF;AACF;ACjVA;EACE,0BAAA;EACA,6BAAA;EACA,uBAAA;ADmVF;;AChVA,uCAAA;AACA;EACE,kBAAA;EACA,qBAAA;EACA,kBAAA;EACA,gBAAA;EACA,aAAA;EACA,8CACE;EACF,SAAA;ADkVF;;AC/UA;EACE,cAAA;ADkVF;;AC/UA,oEAAA;AACA;EACE,4BAAA;EACA,sCAAA;EACA,kBAAA;EACA,6BAAA;EACA,iBAAA;EACA,sBAAA;ADkVF;;AC/UA;EACE,iBAAA;EACA,iBAAA;ADkVF;;AC/UA;EACE,gBAAA;EACA,iBAAA;ADkVF;;AC/UA,8EAAA;AACA;EACE,mBAAA;ADkVF;;AC/UA;EACE,gBAAA;EACA,8BAAA;EACA,wBAAA;EACA,iBAAA;EACA,kBAAA;EACA,mCAAA;ADkVF;;AC/UA,mBAAA;AACA;EACE,eAAA;ADkVF;;AC/UA;EACE,iBAAA;EACA,gBAAA;ADkVF;;AC/UA;EACE,eAAA;EACA,gBAAA;ADkVF;;AC/UA;EACE,kBAAA;ADkVF;;AC/UA;EACE,kBAAA;ADkVF;;AC/UA;EACE,kBAAA;ADkVF;;AC/UA,qCAAA;AACA;;;EAGE,gBAAA;ADkVF;;AC/UA,iCAAA;AACA;EACE;IACE,iBAAA;EDkVF;;EC/UA;IACE,iBAAA;EDkVF;;EC/UA;IACE,kBAAA;EDkVF;;EC/UA;IACE,kBAAA;EDkVF;AACF;AC/UA,2BAAA;AACA;;EAEE,oBAAA;ADiVF;;AC9UA;EACE,qBAAA;ADiVF;;AC9UA;;;;;EAKE,YAAA;EACA,kBAAA;EACA,yBAAA;EACA,eAAA;EACA,gBAAA;EACA,sBAAA;EACA,gBAAA;ADiVF;;AC9UA;;;;;;;;EAQE,YAAA;EACA,mBAAA;ADiVF;;AC9UA;;;EAGE,mBAAA;EACA,iCAAA;ADiVF;;AC9UA;EACE,UAAA;ADiVF;;AC9UA,8DAAA;AACA;EACE,YAAA;ADiVF;;AC9UA;;;;;;;;;;EAUE,uBAAA;EACA,eAAA;ADiVF;;AC9UA,sBAAA;AACA;EACE,eAAA;EACA,cAAA;EACA,mBAAA;ADiVF;;AC9UA,kDAAA;AACA;;EAEE,2BAAA;EACA,mBAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,qBAAA;EACA,SAAA;EACA,UAAA;ADiVF;;AC9UA,sEAAA;AACA;;EAEE,qBAAA;ADiVF;;AC9UA;;EAEE,qBAAA;EACA,+BAAA;EACA,kBAAA;EACA,kBAAA;EACA,qBAAA;EACA,oBAAA;EACA,qBAAA;ADiVF;;AC9UA;EACE,oBAAA;EACA,2BAAA;ADiVF;;AC9UA;EACE,eAAA;ADiVF;;AC9UA,8BAAA;AACA;EACE;IACE,YAAA;IACA,UAAA;IACA,oBAAA;IACA,0BAAA;IACA,cAAA;EDiVF;AACF;AC9UA,6BAAA;AACA;EACE,4BAAA;EACA,+BAAA;EACA,kBAAA;EACA,mBAAA;ADgVF;;AC7UA;EACE,eAAA;EACA,iBAAA;EACA,oBAAA;ADgVF;;AC7UA;EACE,iCAAA;ADgVF;;AC7UA;EACE,aAAA;ADgVF;;AC7UA;EACE,qBAAA;EACA,UAAA;ADgVF;;AC7UA;EACE,gBAAA;ADgVF;;AC7UA,kBAAA;AACA;EACE,yBAAA;EACA,WAAA;EACA,gBAAA;ADgVF;;AC7UA;;EAEE,+BAAA;EACA,gBAAA;EACA,eAAA;ADgVF;;AC7UA;EACE,4BAAA;EACA,iBAAA;ADgVF;;AC7UA;EACE,gEAAA;EACA,4BAAA;ADgVF;;AC7UA;EACE,iBAAA;EACA,qBAAA;ADgVF;;AC7UA,iBAAA;AACA;;;EAGE,kBAAA;EACA,oBAAA;EACA,eAAA;EACA,qBAAA;EACA,kBAAA;EACA,qBAAA;EACA,+BAAA;EACA,kBAAA;EACA,gBAAA;EACA,sBAAA;EACA,UAAA;EACA,qBAAA;EACA,wBAAA;EACA,gBAAA;ADgVF;;AC7UA,2BAAA;AACA;EACE,qIAAA;EAEA,yDAAA;EACA,iCAAA;EACA,4BAAA;AD+UF;;AC5UA;EACE,iCAAA;AD+UF;;AC5UA,oCAAA;AACA;;EAEE,sBAAA;EACA,kBAAA;AD+UF;;AC5UA;EACE,mBAAA;AD+UF;;AC5UA;;EAEE,yBAAA;AD+UF;;AC5UA;EACE,yGAAA;EACA,YAAA;EACA,YAAA;EACA,cAAA;EACA,gBAAA;EACA,kBAAA;EACA,WAAA;EACA,YAAA;EACA,uBAAA;EACA,oCAAA;EACA,qCAAA;EACA,gBAAA;EACA,wBAAA;AD+UF;;AC7UA;EACE,2DAAA;EACA,YAAA;EACA,aAAA;EACA,cAAA;EACA,mBAAA;EACA,kBAAA;EACA,YAAA;EACA,qBAAA;EACA,aAAA;EACA,eAAA;ADgVF;;AC7UA,8CAAA;AACA;EACE,UAAA;ADgVF;;AC7UA,gDAAA;AACA;EACE;;;IAGE,WAAA;EDgVF;AACF;AC7UA,0FAAA;AACA;;EAEE,WAAA;AD+UF;;AC5UA,mDAAA;AACA;EACE,SAAA;AD+UF;;AC5UA,uBAAA;AACA;EACE,oBAAA;EACA,eAAA;EACA,iBAAA;AD+UF;;AC5UA;EACE,gBAAA;EACA,kBAAA;EACA,yBAAA;AD+UF;;AC5UA;;EAEE,eAAA;EACA,YAAA;EACA,kBAAA;AD+UF;;AC5UA;EACE,SAAA;EACA,kBAAA;AD+UF;;AC5UA;EACE,iBAAA;EACA,wBAAA;EACA,mBAAA;AD+UF;;AC5UA;EACE,wBAAA;EACA,sBAAA;EACA,wCAAA;EACA,wBAAA;EACA,kBAAA;AD+UF;;AC5UA;EACE,iBAAA;EACA,wBAAA;EACA,kBAAA;AD+UF;;AC5UA,oCAAA;AACA;;;;;EAKE,6BAAA;EACA,kBAAA;AD+UF;;AC5UA;EACE,0BAAA;EACA,qCAAA;EACA,4CAAA;EACA,kBAAA;EACA,sBAAA;AD+UF;;AC5UA;EACE,oBAAA;EACA,eAAA;EACA,cAAA;EACA,0BAAA;EACA,4BAAA;EACA,+BAAA;EACA,kBAAA;AD+UF;;AC5UA,iCAAA;AACA;EACE,0BAAA;EACA,gBAAA;EACA,SAAA;EACA,UAAA;AD+UF;;AEh1BA;EAEE,mDAAA;EACA,gBAAA;EACA,sBAAA;AFk1BF;;AE/0BA;EACE,aAAA;EACA,sBAAA;EACA,mBAAA;EAEA,mBAAA;AFi1BF;;AE90BA;EACE,kBAAA;EACA,SAAA;EACA,UAAA;AFi1BF;;AE90BA;EACE,qBAAA;EACA,sBAAA;EAEA,YAAA;EACA,0CAAA;EACA,8BAAA;EACA,+BAAA;EACA,oFAAA;AFg1BF;;AE70BA;EACE,aAAA;EACA,uBAAA;EACA,iBAAA;EACA,kBAAA;EACA,SAAA;EACA,OAAA;AFg1BF;;AE50BA;EACE,WAAA;AF+0BF;;AE50BA;EACE,oBAAA;EACA,eAAA;AF+0BF;;AE50BA;EACE,aAAA;EACA,2BAAA;AF+0BF;;AE50BA;EACE,kBAAA;AF+0BF;;AE50BA;EACE,aAAA;EACA,sBAAA;EACA,6BAAA;EACA,yBAAA;AF+0BF;;AE50BA;EACE,kBAAA;AF+0BF;;AE50BA;EACE,aAAA;EACA,sBAAA;AF+0BF;;AE50BA;EACE,aAAA;EACA,eAAA;EACA,8BAAA;EACA,eAAA;AF+0BF;;AE50BA;EACE,YAAA;EACA,WAAA;EACA,kBAAA;AF+0BF;;AE50BA;EACE,aAAA;EACA,sBAAA;EACA,UAAA;EACA,cAAA;AF+0BF","sourcesContent":["/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\n html {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n","/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n/* Document\n   ========================================================================== */\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\nhtml {\n  line-height: 1.15;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n/**\n * Remove the margin in all browsers.\n */\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Remove the gray background on active links in IE 10.\n */\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  text-decoration: underline dotted;\n  /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10.\n */\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=button]::-moz-focus-inner,\n[type=reset]::-moz-focus-inner,\n[type=submit]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=button]:-moz-focusring,\n[type=reset]:-moz-focusring,\n[type=submit]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n[type=checkbox],\n[type=radio] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=number]::-webkit-inner-spin-button,\n[type=number]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=search] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n/**\n * Add the correct display in IE 10+.\n */\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n[hidden] {\n  display: none;\n}\n\n/* Global variables. */\n:root {\n  /* Set sans-serif & mono fonts */\n  --sans-font: -apple-system, BlinkMacSystemFont, \"Avenir Next\", Avenir,\n    \"Nimbus Sans L\", Roboto, Noto, \"Segoe UI\", Arial, Helvetica,\n    \"Helvetica Neue\", sans-serif;\n  --mono-font: Consolas, Menlo, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n  /* Default (light) theme */\n  --bg: #fff;\n  --accent-bg: #f5f7ff;\n  --text: #212121;\n  --text-light: #585858;\n  --border: #d8dae1;\n  --accent: #0d47a1;\n  --code: #d81b60;\n  --preformatted: #444;\n  --marked: #ffdd33;\n  --disabled: #efefef;\n}\n\n/* Dark theme */\n@media (prefers-color-scheme: dark) {\n  :root {\n    --bg: #212121;\n    --accent-bg: #2b2b2b;\n    --text: #dcdcdc;\n    --text-light: #ababab;\n    --border: #666;\n    --accent: #ffb300;\n    --code: #f06292;\n    --preformatted: #ccc;\n    --disabled: #111;\n  }\n\n  /* Add a bit of transparancy so light media isn't so glaring in dark mode */\n  img,\nvideo {\n    opacity: 0.8;\n  }\n}\nhtml {\n  /* Set the font globally */\n  font-family: var(--sans-font);\n  scroll-behavior: smooth;\n}\n\n/* Make the body a nice central block */\nbody {\n  color: var(--text);\n  background: var(--bg);\n  font-size: 1.15rem;\n  line-height: 1.5;\n  display: grid;\n  grid-template-columns: 1fr min(45rem, 90%) 1fr;\n  margin: 0;\n}\n\nbody > * {\n  grid-column: 2;\n}\n\n/* Make the header bg full width, but the content inline with body */\nbody > header {\n  background: var(--accent-bg);\n  border-bottom: 1px solid var(--border);\n  text-align: center;\n  padding: 0 0.5rem 2rem 0.5rem;\n  grid-column: 1/-1;\n  box-sizing: border-box;\n}\n\nbody > header h1 {\n  max-width: 1200px;\n  margin: 1rem auto;\n}\n\nbody > header p {\n  max-width: 40rem;\n  margin: 1rem auto;\n}\n\n/* Add a little padding to ensure spacing is correct between content and nav */\nmain {\n  padding-top: 1.5rem;\n}\n\nbody > footer {\n  margin-top: 4rem;\n  padding: 2rem 1rem 1.5rem 1rem;\n  color: var(--text-light);\n  font-size: 0.9rem;\n  text-align: center;\n  border-top: 1px solid var(--border);\n}\n\n/* Format headers */\nh1 {\n  font-size: 3rem;\n}\n\nh2 {\n  font-size: 2.6rem;\n  margin-top: 3rem;\n}\n\nh3 {\n  font-size: 2rem;\n  margin-top: 3rem;\n}\n\nh4 {\n  font-size: 1.44rem;\n}\n\nh5 {\n  font-size: 1.15rem;\n}\n\nh6 {\n  font-size: 0.96rem;\n}\n\n/* Fix line height when title wraps */\nh1,\nh2,\nh3 {\n  line-height: 1.1;\n}\n\n/* Reduce header size on mobile */\n@media only screen and (max-width: 720px) {\n  h1 {\n    font-size: 2.5rem;\n  }\n\n  h2 {\n    font-size: 2.1rem;\n  }\n\n  h3 {\n    font-size: 1.75rem;\n  }\n\n  h4 {\n    font-size: 1.25rem;\n  }\n}\n/* Format links & buttons */\na,\na:visited {\n  color: var(--accent);\n}\n\na:hover {\n  text-decoration: none;\n}\n\nbutton,\n[role=button],\ninput[type=submit],\ninput[type=reset],\ninput[type=button] {\n  border: none;\n  border-radius: 5px;\n  background: var(--accent);\n  font-size: 1rem;\n  color: var(--bg);\n  padding: 0.7rem 0.9rem;\n  margin: 0.5rem 0;\n}\n\nbutton[disabled],\n[role=button][aria-disabled=true],\ninput[type=submit][disabled],\ninput[type=reset][disabled],\ninput[type=button][disabled],\ninput[type=checkbox][disabled],\ninput[type=radio][disabled],\nselect[disabled] {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\ninput:disabled,\ntextarea:disabled,\nselect:disabled {\n  cursor: not-allowed;\n  background-color: var(--disabled);\n}\n\ninput[type=range] {\n  padding: 0;\n}\n\n/* Set the cursor to '?' while hovering over an abbreviation */\nabbr {\n  cursor: help;\n}\n\nbutton:focus,\nbutton:enabled:hover,\n[role=button]:focus,\n[role=button]:not([aria-disabled=true]):hover,\ninput[type=submit]:focus,\ninput[type=submit]:enabled:hover,\ninput[type=reset]:focus,\ninput[type=reset]:enabled:hover,\ninput[type=button]:focus,\ninput[type=button]:enabled:hover {\n  filter: brightness(1.4);\n  cursor: pointer;\n}\n\n/* Format navigation */\nnav {\n  font-size: 1rem;\n  line-height: 2;\n  padding: 1rem 0 0 0;\n}\n\n/* Use flexbox to allow items to wrap, as needed */\nnav ul,\nnav ol {\n  align-content: space-around;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n}\n\n/* List items are inline elements, make them behave more like blocks */\nnav ul li,\nnav ol li {\n  display: inline-block;\n}\n\nnav a,\nnav a:visited {\n  margin: 0 1rem 1rem 0;\n  border: 1px solid var(--border);\n  border-radius: 5px;\n  color: var(--text);\n  display: inline-block;\n  padding: 0.1rem 1rem;\n  text-decoration: none;\n}\n\nnav a:hover {\n  color: var(--accent);\n  border-color: var(--accent);\n}\n\nnav a:last-child {\n  margin-right: 0;\n}\n\n/* Reduce nav side on mobile */\n@media only screen and (max-width: 720px) {\n  nav a {\n    border: none;\n    padding: 0;\n    color: var(--accent);\n    text-decoration: underline;\n    line-height: 1;\n  }\n}\n/* Format the expanding box */\ndetails {\n  background: var(--accent-bg);\n  border: 1px solid var(--border);\n  border-radius: 5px;\n  margin-bottom: 1rem;\n}\n\nsummary {\n  cursor: pointer;\n  font-weight: bold;\n  padding: 0.6rem 1rem;\n}\n\ndetails[open] {\n  padding: 0.6rem 1rem 0.75rem 1rem;\n}\n\ndetails[open] summary + * {\n  margin-top: 0;\n}\n\ndetails[open] summary {\n  margin-bottom: 0.5rem;\n  padding: 0;\n}\n\ndetails[open] > *:last-child {\n  margin-bottom: 0;\n}\n\n/* Format tables */\ntable {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1.5rem 0;\n}\n\ntd,\nth {\n  border: 1px solid var(--border);\n  text-align: left;\n  padding: 0.5rem;\n}\n\nth {\n  background: var(--accent-bg);\n  font-weight: bold;\n}\n\ntr:nth-child(even) {\n  /* Set every other cell slightly darker. Improves readability. */\n  background: var(--accent-bg);\n}\n\ntable caption {\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n}\n\n/* Format forms */\ntextarea,\nselect,\ninput {\n  font-size: inherit;\n  font-family: inherit;\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n  color: var(--text);\n  background: var(--bg);\n  border: 1px solid var(--border);\n  border-radius: 5px;\n  box-shadow: none;\n  box-sizing: border-box;\n  width: 60%;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n}\n\n/* Add arrow to drop-down */\nselect {\n  background-image: linear-gradient(45deg, transparent 49%, var(--text) 51%), linear-gradient(135deg, var(--text) 51%, transparent 49%);\n  background-position: calc(100% - 20px), calc(100% - 15px);\n  background-size: 5px 5px, 5px 5px;\n  background-repeat: no-repeat;\n}\n\nselect[multiple] {\n  background-image: none !important;\n}\n\n/* checkbox and radio button style */\ninput[type=checkbox],\ninput[type=radio] {\n  vertical-align: bottom;\n  position: relative;\n}\n\ninput[type=radio] {\n  border-radius: 100%;\n}\n\ninput[type=checkbox]:checked,\ninput[type=radio]:checked {\n  background: var(--accent);\n}\n\ninput[type=checkbox]:checked::after {\n  /* Creates a rectangle with colored right and bottom borders which is rotated to look like a check mark */\n  content: \" \";\n  width: 0.1em;\n  height: 0.25em;\n  border-radius: 0;\n  position: absolute;\n  top: 0.05em;\n  left: 0.18em;\n  background: transparent;\n  border-right: solid var(--bg) 0.08em;\n  border-bottom: solid var(--bg) 0.08em;\n  font-size: 1.8em;\n  transform: rotate(45deg);\n}\n\ninput[type=radio]:checked::after {\n  /* creates a colored circle for the checked radio button  */\n  content: \" \";\n  width: 0.25em;\n  height: 0.25em;\n  border-radius: 100%;\n  position: absolute;\n  top: 0.125em;\n  background: var(--bg);\n  left: 0.125em;\n  font-size: 32px;\n}\n\n/* Make the textarea wider than other inputs */\ntextarea {\n  width: 80%;\n}\n\n/* Makes input fields wider on smaller screens */\n@media only screen and (max-width: 720px) {\n  textarea,\nselect,\ninput {\n    width: 100%;\n  }\n}\n/* Ensures the checkbox and radio inputs do not have a set width like other input fields */\ninput[type=checkbox],\ninput[type=radio] {\n  width: auto;\n}\n\n/* do not show border around file selector button */\ninput[type=file] {\n  border: 0;\n}\n\n/* Misc body elements */\nhr {\n  color: var(--border);\n  border-top: 1px;\n  margin: 1rem auto;\n}\n\nmark {\n  padding: 2px 5px;\n  border-radius: 4px;\n  background: var(--marked);\n}\n\nmain img,\nmain video {\n  max-width: 100%;\n  height: auto;\n  border-radius: 5px;\n}\n\nfigure {\n  margin: 0;\n  text-align: center;\n}\n\nfigcaption {\n  font-size: 0.9rem;\n  color: var(--text-light);\n  margin-bottom: 1rem;\n}\n\nblockquote {\n  margin: 2rem 0 2rem 2rem;\n  padding: 0.4rem 0.8rem;\n  border-left: 0.35rem solid var(--accent);\n  color: var(--text-light);\n  font-style: italic;\n}\n\ncite {\n  font-size: 0.9rem;\n  color: var(--text-light);\n  font-style: normal;\n}\n\n/* Use mono font for code elements */\ncode,\npre,\npre span,\nkbd,\nsamp {\n  font-family: var(--mono-font);\n  color: var(--code);\n}\n\nkbd {\n  color: var(--preformatted);\n  border: 1px solid var(--preformatted);\n  border-bottom: 3px solid var(--preformatted);\n  border-radius: 5px;\n  padding: 0.1rem 0.4rem;\n}\n\npre {\n  padding: 1rem 1.4rem;\n  max-width: 100%;\n  overflow: auto;\n  color: var(--preformatted);\n  background: var(--accent-bg);\n  border: 1px solid var(--border);\n  border-radius: 5px;\n}\n\n/* Fix embedded code within pre */\npre code {\n  color: var(--preformatted);\n  background: none;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background: url(\"../media/cloud_mountain_bg.jpg\");\n  overflow: hidden;\n  background-size: cover;\n}\n\nheader {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 8px;\n}\n\nheader > time {\n  position: absolute;\n  top: 1rem;\n  left: 1rem;\n}\n\nmain {\n  margin: 0 auto 0 auto;\n  padding: 0 8px 6px 8px;\n  height: 100%;\n  background-color: rgba(18, 93, 168, 0.781);\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  box-shadow: 2px 0px 2px rgba(9, 54, 100, 0.781), 0px 3px 1px rgba(9, 54, 100, 0.781);\n}\n\nform {\n  display: flex;\n  justify-content: center;\n  padding: 8px 1rem;\n  position: absolute;\n  top: 3rem;\n  left: 0;\n}\n\ninput {\n  width: 100%;\n}\n\nbutton {\n  margin: 2px 6px 10px;\n  padding: 0 10px;\n}\n\n#current-weather {\n  display: flex;\n  justify-content: flex-start;\n}\n\nfigcaption {\n  color: var(--text);\n}\n\n#current-temps {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  margin: 8rem 8rem 10rem 0;\n}\n\nh6 {\n  margin-bottom: 8px;\n}\n\n#current-details {\n  display: flex;\n  flex-direction: column;\n}\n\n#daily-forecast {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  font-size: 17px;\n}\n\n#daily-forecast > h4 {\n  flex-grow: 2;\n  width: 100%;\n  margin: 2px 0 16px;\n}\n\n.day-div {\n  display: flex;\n  flex-direction: column;\n  width: 15%;\n  margin: 0 auto;\n}","/* Global variables. */\n:root {\n  /* Set sans-serif & mono fonts */\n  --sans-font: -apple-system, BlinkMacSystemFont, \"Avenir Next\", Avenir,\n    \"Nimbus Sans L\", Roboto, Noto, \"Segoe UI\", Arial, Helvetica,\n    \"Helvetica Neue\", sans-serif;\n  --mono-font: Consolas, Menlo, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n\n  /* Default (light) theme */\n  --bg: #fff;\n  --accent-bg: #f5f7ff;\n  --text: #212121;\n  --text-light: #585858;\n  --border: #d8dae1;\n  --accent: #0d47a1;\n  --code: #d81b60;\n  --preformatted: #444;\n  --marked: #ffdd33;\n  --disabled: #efefef;\n}\n\n/* Dark theme */\n@media (prefers-color-scheme: dark) {\n  :root {\n    --bg: #212121;\n    --accent-bg: #2b2b2b;\n    --text: #dcdcdc;\n    --text-light: #ababab;\n    --border: #666;\n    --accent: #ffb300;\n    --code: #f06292;\n    --preformatted: #ccc;\n    --disabled: #111;\n  }\n  /* Add a bit of transparancy so light media isn't so glaring in dark mode */\n  img,\n  video {\n    opacity: 0.8;\n  }\n}\n\nhtml {\n  /* Set the font globally */\n  font-family: var(--sans-font);\n  scroll-behavior: smooth;\n}\n\n/* Make the body a nice central block */\nbody {\n  color: var(--text);\n  background: var(--bg);\n  font-size: 1.15rem;\n  line-height: 1.5;\n  display: grid;\n  grid-template-columns:\n    1fr min(45rem, 90%) 1fr;\n  margin: 0;\n}\n\nbody>* {\n  grid-column: 2;\n}\n\n/* Make the header bg full width, but the content inline with body */\nbody > header {\n  background: var(--accent-bg);\n  border-bottom: 1px solid var(--border);\n  text-align: center;\n  padding: 0 0.5rem 2rem 0.5rem;\n  grid-column: 1 / -1;\n  box-sizing: border-box;\n}\n\nbody > header h1 {\n  max-width: 1200px;\n  margin: 1rem auto;\n}\n\nbody > header p {\n  max-width: 40rem;\n  margin: 1rem auto;\n}\n\n/* Add a little padding to ensure spacing is correct between content and nav */\nmain {\n  padding-top: 1.5rem;\n}\n\nbody > footer {\n  margin-top: 4rem;\n  padding: 2rem 1rem 1.5rem 1rem;\n  color: var(--text-light);\n  font-size: 0.9rem;\n  text-align: center;\n  border-top: 1px solid var(--border);\n}\n\n/* Format headers */\nh1 {\n  font-size: 3rem;\n}\n\nh2 {\n  font-size: 2.6rem;\n  margin-top: 3rem;\n}\n\nh3 {\n  font-size: 2rem;\n  margin-top: 3rem;\n}\n\nh4 {\n  font-size: 1.44rem;\n}\n\nh5 {\n  font-size: 1.15rem;\n}\n\nh6 {\n  font-size: 0.96rem;\n}\n\n/* Fix line height when title wraps */\nh1,\nh2,\nh3 {\n  line-height: 1.1;\n}\n\n/* Reduce header size on mobile */\n@media only screen and (max-width: 720px) {\n  h1 {\n    font-size: 2.5rem;\n  }\n\n  h2 {\n    font-size: 2.1rem;\n  }\n\n  h3 {\n    font-size: 1.75rem;\n  }\n\n  h4 {\n    font-size: 1.25rem;\n  }\n}\n\n/* Format links & buttons */\na,\na:visited {\n  color: var(--accent);\n}\n\na:hover {\n  text-decoration: none;\n}\n\nbutton,\n[role=\"button\"],\ninput[type=\"submit\"],\ninput[type=\"reset\"],\ninput[type=\"button\"] {\n  border: none;\n  border-radius: 5px;\n  background: var(--accent);\n  font-size: 1rem;\n  color: var(--bg);\n  padding: 0.7rem 0.9rem;\n  margin: 0.5rem 0;\n}\n\nbutton[disabled],\n[role=\"button\"][aria-disabled=\"true\"],\ninput[type=\"submit\"][disabled],\ninput[type=\"reset\"][disabled],\ninput[type=\"button\"][disabled],\ninput[type=\"checkbox\"][disabled],\ninput[type=\"radio\"][disabled],\nselect[disabled] {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\ninput:disabled,\ntextarea:disabled,\nselect:disabled {\n  cursor: not-allowed;\n  background-color: var(--disabled);\n}\n\ninput[type=\"range\"] {\n  padding: 0;\n}\n\n/* Set the cursor to '?' while hovering over an abbreviation */\nabbr {\n  cursor: help;\n}\n\nbutton:focus,\nbutton:enabled:hover,\n[role=\"button\"]:focus,\n[role=\"button\"]:not([aria-disabled=\"true\"]):hover,\ninput[type=\"submit\"]:focus,\ninput[type=\"submit\"]:enabled:hover,\ninput[type=\"reset\"]:focus,\ninput[type=\"reset\"]:enabled:hover,\ninput[type=\"button\"]:focus,\ninput[type=\"button\"]:enabled:hover {\n  filter: brightness(1.4);\n  cursor: pointer;\n}\n\n/* Format navigation */\nnav {\n  font-size: 1rem;\n  line-height: 2;\n  padding: 1rem 0 0 0;\n}\n\n/* Use flexbox to allow items to wrap, as needed */\nnav ul,\nnav ol {\n  align-content:   space-around;\n  align-items:     center;\n  display:         flex;\n  flex-direction:  row;\n  justify-content: center;\n  list-style-type: none;\n  margin:          0;\n  padding:         0;\n}\n\n/* List items are inline elements, make them behave more like blocks */\nnav ul li,\nnav ol li {\n  display: inline-block;\n}\n\nnav a,\nnav a:visited {\n  margin: 0 1rem 1rem 0;\n  border: 1px solid var(--border);\n  border-radius: 5px;\n  color: var(--text);\n  display: inline-block;\n  padding: 0.1rem 1rem;\n  text-decoration: none;\n}\n\nnav a:hover {\n  color: var(--accent);\n  border-color: var(--accent);\n}\n\nnav a:last-child {\n  margin-right: 0;\n}\n\n/* Reduce nav side on mobile */\n@media only screen and (max-width: 720px) {\n  nav a {\n    border: none;\n    padding: 0;\n    color: var(--accent);\n    text-decoration: underline;\n    line-height: 1;\n  }\n}\n\n/* Format the expanding box */\ndetails {\n  background: var(--accent-bg);\n  border: 1px solid var(--border);\n  border-radius: 5px;\n  margin-bottom: 1rem;\n}\n\nsummary {\n  cursor: pointer;\n  font-weight: bold;\n  padding: 0.6rem 1rem;\n}\n\ndetails[open] {\n  padding: 0.6rem 1rem 0.75rem 1rem;\n}\n\ndetails[open] summary + * {\n  margin-top: 0;\n}\n\ndetails[open] summary {\n  margin-bottom: 0.5rem;\n  padding: 0;\n}\n\ndetails[open] > *:last-child {\n  margin-bottom: 0;\n}\n\n/* Format tables */\ntable {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1.5rem 0;\n}\n\ntd,\nth {\n  border: 1px solid var(--border);\n  text-align: left;\n  padding: 0.5rem;\n}\n\nth {\n  background: var(--accent-bg);\n  font-weight: bold;\n}\n\ntr:nth-child(even) {\n  /* Set every other cell slightly darker. Improves readability. */\n  background: var(--accent-bg);\n}\n\ntable caption {\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n}\n\n/* Format forms */\ntextarea,\nselect,\ninput {\n  font-size: inherit;\n  font-family: inherit;\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n  color: var(--text);\n  background: var(--bg);\n  border: 1px solid var(--border);\n  border-radius: 5px;\n  box-shadow: none;\n  box-sizing: border-box;\n  width: 60%;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n}\n\n/* Add arrow to drop-down */\nselect {\n  background-image: linear-gradient(45deg, transparent 49%, var(--text) 51%),\n    linear-gradient(135deg, var(--text) 51%, transparent 49%);\n  background-position: calc(100% - 20px), calc(100% - 15px);\n  background-size: 5px 5px, 5px 5px;\n  background-repeat: no-repeat;\n}\n\nselect[multiple] {\n  background-image: none !important;\n}\n\n/* checkbox and radio button style */\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  vertical-align: bottom;\n  position: relative;\n}\n\ninput[type=\"radio\"] {\n  border-radius: 100%;\n}\n\ninput[type=\"checkbox\"]:checked,\ninput[type=\"radio\"]:checked {\n  background: var(--accent);\n}\n\ninput[type=\"checkbox\"]:checked::after {\n  /* Creates a rectangle with colored right and bottom borders which is rotated to look like a check mark */\n  content: \" \";\n  width: 0.1em;\n  height: 0.25em;\n  border-radius: 0;\n  position: absolute;\n  top: 0.05em;\n  left: 0.18em;\n  background: transparent;\n  border-right: solid var(--bg) 0.08em;\n  border-bottom: solid var(--bg) 0.08em;\n  font-size: 1.8em;\n  transform: rotate(45deg);\n}\ninput[type=\"radio\"]:checked::after {\n  /* creates a colored circle for the checked radio button  */\n  content: \" \";\n  width: 0.25em;\n  height: 0.25em;\n  border-radius: 100%;\n  position: absolute;\n  top: 0.125em;\n  background: var(--bg);\n  left: 0.125em;\n  font-size: 32px;\n}\n\n/* Make the textarea wider than other inputs */\ntextarea {\n  width: 80%;\n}\n\n/* Makes input fields wider on smaller screens */\n@media only screen and (max-width: 720px) {\n  textarea,\n  select,\n  input {\n    width: 100%;\n  }\n}\n\n/* Ensures the checkbox and radio inputs do not have a set width like other input fields */\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  width: auto;\n}\n\n/* do not show border around file selector button */\ninput[type=\"file\"] {\n  border: 0;\n}\n\n/* Misc body elements */\nhr {\n  color: var(--border);\n  border-top: 1px;\n  margin: 1rem auto;\n}\n\nmark {\n  padding: 2px 5px;\n  border-radius: 4px;\n  background: var(--marked);\n}\n\nmain img,\nmain video {\n  max-width: 100%;\n  height: auto;\n  border-radius: 5px;\n}\n\nfigure {\n  margin: 0;\n  text-align: center;\n}\n\nfigcaption {\n  font-size: 0.9rem;\n  color: var(--text-light);\n  margin-bottom: 1rem;\n}\n\nblockquote {\n  margin: 2rem 0 2rem 2rem;\n  padding: 0.4rem 0.8rem;\n  border-left: 0.35rem solid var(--accent);\n  color: var(--text-light);\n  font-style: italic;\n}\n\ncite {\n  font-size: 0.9rem;\n  color: var(--text-light);\n  font-style: normal;\n}\n\n/* Use mono font for code elements */\ncode,\npre,\npre span,\nkbd,\nsamp {\n  font-family: var(--mono-font);\n  color: var(--code);\n}\n\nkbd {\n  color: var(--preformatted);\n  border: 1px solid var(--preformatted);\n  border-bottom: 3px solid var(--preformatted);\n  border-radius: 5px;\n  padding: 0.1rem 0.4rem;\n}\n\npre {\n  padding: 1rem 1.4rem;\n  max-width: 100%;\n  overflow: auto;\n  color: var(--preformatted);\n  background: var(--accent-bg);\n  border: 1px solid var(--border);\n  border-radius: 5px;\n}\n\n/* Fix embedded code within pre */\npre code {\n  color: var(--preformatted);\n  background: none;\n  margin: 0;\n  padding: 0;\n}\n","body {\n  // background: url('../media/cloud_bg.jpg');\n  background: url('../media/cloud_mountain_bg.jpg');\n  overflow: hidden;\n  background-size: cover;\n}\n\nheader {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  // background-color: rgb(51, 90, 129);\n  padding-bottom: 8px;\n}\n\nheader > time {\n  position: absolute;\n  top: 1rem;\n  left: 1rem;\n}\n\nmain {\n  margin: 0 auto 0 auto;\n  padding: 0 8px 6px 8px;\n  // width: 45%;\n  height: 100%;\n  background-color: rgba(18, 93, 168, 0.781);\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  box-shadow: 2px 0px 2px rgba(9, 54, 100, 0.781), 0px 3px 1px rgba(9, 54, 100, 0.781);\n}\n\nform {\n  display: flex;\n  justify-content: center;\n  padding: 8px 1rem;\n  position: absolute;\n  top: 3rem;\n  left: 0;\n  // background-color: rgb(51, 90, 129);\n}\n\ninput {\n  width: 100%;\n}\n\nbutton {\n  margin: 2px 6px 10px;\n  padding: 0 10px;\n}\n\n#current-weather {\n  display: flex;\n  justify-content: flex-start;\n}\n\nfigcaption {\n  color: var(--text);\n}\n\n#current-temps {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  margin: 8rem 8rem 10rem 0;\n}\n\nh6 {\n  margin-bottom: 8px;\n}\n\n#current-details {\n  display: flex;\n  flex-direction: column;\n}\n\n#daily-forecast {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  font-size: 17px;\n}\n\n#daily-forecast > h4 {\n  flex-grow: 2;\n  width: 100%;\n  margin: 2px 0 16px;\n}\n\n.day-div {\n  display: flex;\n  flex-direction: column;\n  width: 15%;\n  margin: 0 auto;\n};\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {



/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";

      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }

      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }

      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }

      content += cssWithMappingToString(item);

      if (needLayer) {
        content += "}";
      }

      if (item[2]) {
        content += "}";
      }

      if (item[4]) {
        content += "}";
      }

      return content;
    }).join("");
  }; // import a list of modules into the list


  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }

      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }

      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }

      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }

      list.push(item);
    }
  };

  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {



module.exports = function (url, options) {
  if (!options) {
    options = {};
  }

  if (!url) {
    return url;
  }

  url = String(url.__esModule ? url.default : url); // If url is already wrapped in quotes, remove them

  if (/^['"].*['"]$/.test(url)) {
    url = url.slice(1, -1);
  }

  if (options.hash) {
    url += options.hash;
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


  if (/["'() \t\n]|(%20)/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }

  return url;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {



module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join("\n");
  }

  return [content].join("\n");
};

/***/ }),

/***/ "./src/styles/main.scss":
/*!******************************!*\
  !*** ./src/styles/main.scss ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_main_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./main.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles/main.scss");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {



var stylesInDOM = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };

    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);

  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }

      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };

  return updater;
}

module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();

        stylesInDOM.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {



var memo = {};
/* istanbul ignore next  */

function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }

    memo[target] = styleTarget;
  }

  return memo[target];
}
/* istanbul ignore next  */


function insertBySelector(insert, style) {
  var target = getTarget(insert);

  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }

  target.appendChild(style);
}

module.exports = insertBySelector;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}

module.exports = insertStyleElement;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;

  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}

module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";

  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }

  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }

  var needLayer = typeof obj.layer !== "undefined";

  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }

  css += obj.css;

  if (needLayer) {
    css += "}";
  }

  if (obj.media) {
    css += "}";
  }

  if (obj.supports) {
    css += "}";
  }

  var sourceMap = obj.sourceMap;

  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  options.styleTagTransform(css, styleElement, options.options);
}

function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }

  styleElement.parentNode.removeChild(styleElement);
}
/* istanbul ignore next  */


function domAPI(options) {
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}

module.exports = domAPI;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }

    styleElement.appendChild(document.createTextNode(css));
  }
}

module.exports = styleTagTransform;

/***/ }),

/***/ "./src/js/convert_temp.js":
/*!********************************!*\
  !*** ./src/js/convert_temp.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const convertTemp = (temp, srcUnit) => {
  switch (srcUnit) {
    case 'K':
      return (temp - 273.15).toFixed(2);
    case 'C':
      return (temp * (9 / 5) + 32).toFixed(2);
    case 'F':
      return ((temp - 32) * (5 / 9)).toFixed(2);
    default:
      return temp;
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (convertTemp);


/***/ }),

/***/ "./src/js/elements.js":
/*!****************************!*\
  !*** ./src/js/elements.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const buildDailyForecast = () => {
  const days = ['mon', 'tues', 'wednes', 'thurs', 'fri', 'satur', 'sun'];
  const todayIndex = new Date().getDay() - 1;
  const sortedDays = [];
  for (let i = 0; i < 7; i += 1) {
    sortedDays.push(days[(i + todayIndex) % 7]);
  }
  const today = days[todayIndex];
  const otherDays = sortedDays.filter((day) => day !== today);
  const otherDayDivs = otherDays.map((day) => {
    // Fooday, Foomember 4th
    // ICON
    // status
    // hi / lo
    const dayDiv = document.createElement('div');
    const dayHeader = document.createElement('b');
    const daySubHeader = document.createElement('span');
    const dayIcon = new Image();
    const dayStatus = document.createElement('small');
    const dayHi = document.createElement('div');
    const dayLo = document.createElement('div');
    dayDiv.classList.add('day-div');
    dayDiv.id = `${day}day-forecast`;
    dayDiv.appendChild(dayHeader);
    dayDiv.appendChild(daySubHeader);
    dayDiv.appendChild(dayIcon);
    dayDiv.appendChild(dayStatus);
    dayDiv.appendChild(dayHi);
    dayDiv.appendChild(dayLo);
    dayHeader.textContent = `${day[0].toUpperCase()}${day.slice(1, day.length)}day`;
    return dayDiv;
  });

  return otherDayDivs;
};

const getElements = () => {
  const forecastWrapper = document.getElementById('wrapper');
  const currentLocation = document.getElementById('location');
  const currentWeather = document.getElementById('current-weather');
  const currentStatus = document.getElementById('current-weather-status');
  const currentIcon = document.getElementById('current-weather-icon');
  const currentTemp = document.getElementById('current-temp');
  const currentHigh = document.getElementById('current-high');
  const currentLow = document.getElementById('current-low');
  const currentFeelsLike = document.getElementById('current-feels-like');
  const humidity = document.getElementById('current-humidity');
  const dewPoint = document.getElementById('current-dew-point');
  const pressure = document.getElementById('current-pressure');
  const uvIndex = document.getElementById('current-uv-index');
  const visibility = document.getElementById('current-visibility');
  const windSpeed = document.getElementById('wind-speed');
  const windDirection = document.getElementById('wind-direction');
  const clouds = document.getElementById('current-clouds');
  const clock = document.getElementById('clock');
  const daily = document.getElementById('daily-forecast');
  buildDailyForecast().forEach((day) => {
    daily.appendChild(day);
  });

  return {
    wrapper: forecastWrapper,
    location: currentLocation,
    weather: currentWeather,
    status: currentStatus,
    icon: currentIcon,
    clock,
    daily,
    temps: {
      low: currentLow,
      high: currentHigh,
      current: currentTemp,
      feelsLike: currentFeelsLike,
    },
    wind: {
      speed: windSpeed,
      dir: windDirection,
    },
    details: {
      clouds,
      humidity,
      dewPoint,
      pressure,
      uvIndex,
      visibility,
    },
  };
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getElements);


/***/ }),

/***/ "./src/js/fillers.js":
/*!***************************!*\
  !*** ./src/js/fillers.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fillPageCurrentData": () => (/* binding */ fillPageCurrentData),
/* harmony export */   "fillPageCurrentDetails": () => (/* binding */ fillPageCurrentDetails),
/* harmony export */   "fillPageCurrentStatus": () => (/* binding */ fillPageCurrentStatus),
/* harmony export */   "fillPageCurrentTemps": () => (/* binding */ fillPageCurrentTemps),
/* harmony export */   "fillPageCurrentWind": () => (/* binding */ fillPageCurrentWind),
/* harmony export */   "fillPageDailyData": () => (/* binding */ fillPageDailyData),
/* harmony export */   "fillPageWithWeatherData": () => (/* binding */ fillPageWithWeatherData)
/* harmony export */ });
/* harmony import */ var _convert_temp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./convert_temp */ "./src/js/convert_temp.js");
/* harmony import */ var _elements__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./elements */ "./src/js/elements.js");
/* harmony import */ var _weather__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./weather */ "./src/js/weather.js");
/* harmony import */ var _getters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getters */ "./src/js/getters.js");





const elements = (0,_elements__WEBPACK_IMPORTED_MODULE_1__["default"])();

const fillPageCurrentStatus = (weatherData) => {
  elements.status.textContent = weatherData.weather;
  (0,_weather__WEBPACK_IMPORTED_MODULE_2__.getWeatherIcon)(weatherData.iconCode, 4).then((url) => {
    elements.icon.src = url;
  });
  elements.location.textContent = weatherData.name;
};

const fillPageCurrentTemps = (tempData) => {
  const deg = '\u00B0';
  Object.keys(tempData).forEach((key) => {
    const temp = `${tempData[key]}${deg}C`;
    elements.temps[key].textContent = temp;
  });
};

const fillPageCurrentDetails = (currentDetails) => {
  const dewPoint = (0,_convert_temp__WEBPACK_IMPORTED_MODULE_0__["default"])(currentDetails.dewPoint, 'K');
  const { details } = elements;
  details.humidity.textContent = currentDetails.humidity;
  details.dewPoint.textContent = dewPoint;
  details.pressure.textContent = currentDetails.pressure;
  details.clouds.textContent = currentDetails.clouds;
  details.uvIndex.textContent = currentDetails.uvIndex;
  details.visibility.textContent = currentDetails.visibility;
};

const fillPageCurrentWind = (currentWind) => {
  elements.wind.speed.textContent = currentWind.speed;
  elements.wind.dir.textContent = currentWind.direction;
};

const fillPageCurrentData = (weatherData) => {
  const { temps, wind, details } = weatherData;

  fillPageCurrentStatus(weatherData);
  fillPageCurrentTemps(temps);
  fillPageCurrentWind(wind);
  fillPageCurrentDetails(details);
};

const fillPageDailyData = (weatherData) => {
  const daily = weatherData.daily.slice(1, weatherData.daily.length);
  const dayDivs = Array.from(elements.daily.children).slice(1, 7);
  dayDivs.forEach((dayDiv, dayIndex) => {
    const dayData = daily[dayIndex];
    const children = Array.from(dayDiv.children);
    const [subheader, icon, status, high, low] = children.slice(1, children.length);

    // Add month and day to dayDiv header
    const unixTime = daily[dayIndex].sunrise - 100;
    const date = new Date(unixTime * 1000);
    const monthDay = date.toString().split(' ').slice(1, 3).join(' ');
    subheader.textContent = `${monthDay}`;

    // Add appropriate icon
    const iconCode = dayData.weather[0].icon;
    (0,_weather__WEBPACK_IMPORTED_MODULE_2__.getWeatherIcon)(iconCode, 2).then((url) => {
      icon.src = url;
    });

    // Add status
    const dayStatus = (0,_getters__WEBPACK_IMPORTED_MODULE_3__.getDescriptionFromWeatherData)(dayData.weather[0]);
    status.textContent = dayStatus;

    const dayHigh = (0,_convert_temp__WEBPACK_IMPORTED_MODULE_0__["default"])(dayData.temp.max, 'K');
    const dayLow = (0,_convert_temp__WEBPACK_IMPORTED_MODULE_0__["default"])(dayData.temp.min, 'K');
    const degree = '\u00B0';
    high.textContent = `Hi ${dayHigh}${degree}C`;
    low.textContent = `Lo ${dayLow}${degree}C`;
  });
};

const fillPageWithWeatherData = (weatherData) => {
  fillPageCurrentData(weatherData);
  fillPageDailyData(weatherData);
};




/***/ }),

/***/ "./src/js/geocode.js":
/*!***************************!*\
  !*** ./src/js/geocode.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const positionStackUrl = 'http://api.positionstack.com/v1/forward?';
const PSApiKey = 'access_key=d1815bb82d8ef2d2cc23e6843ef3e3a7';

const forwardGeocodeQuery = async (query) => {
  const positionStackAPI = `${positionStackUrl}${PSApiKey}`;
  const positionStackQuery = `${positionStackAPI}&query=${query}&limit=5`;
  const response = await fetch(positionStackQuery, { mode: 'cors' });
  const json = await response.json();

  return json;
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (forwardGeocodeQuery);


/***/ }),

/***/ "./src/js/getters.js":
/*!***************************!*\
  !*** ./src/js/getters.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getDateTimeString": () => (/* binding */ getDateTimeString),
/* harmony export */   "getDescriptionFromWeatherData": () => (/* binding */ getDescriptionFromWeatherData),
/* harmony export */   "getDetailsFromWeatherData": () => (/* binding */ getDetailsFromWeatherData),
/* harmony export */   "getTempsFromWeatherData": () => (/* binding */ getTempsFromWeatherData),
/* harmony export */   "getWindFromWeatherData": () => (/* binding */ getWindFromWeatherData)
/* harmony export */ });
/* harmony import */ var cardinal_direction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cardinal-direction */ "./node_modules/cardinal-direction/dist/index.js");
/* harmony import */ var _convert_temp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./convert_temp */ "./src/js/convert_temp.js");



const getDescriptionFromWeatherData = (descData) => {
  const descArray = descData.description.split(' ');
  const descTitlizedArray = descArray.map((string) => {
    const firstLetter = string[0].toUpperCase();
    const restOfLetters = string.slice(1, string.length);
    return firstLetter.concat(restOfLetters);
  });

  const titlizedDescription = descTitlizedArray.join(' ');

  return titlizedDescription;
};

const getTempsFromWeatherData = (tempData) => {
  const rawTemps = {
    current: tempData.current.temp,
    high: tempData.daily.temp.max,
    low: tempData.daily.temp.min,
    feelsLike: tempData.current.feels_like,
  };

  return Object.fromEntries(
    Object.keys(rawTemps).map((key) => {
      const temp = rawTemps[key];
      return [key, (0,_convert_temp__WEBPACK_IMPORTED_MODULE_1__["default"])(temp, 'K')];
    }),
  );
};

const getWindFromWeatherData = (windData) => {
  const speed = `${windData.wind_speed}m/s`;
  const direction = (0,cardinal_direction__WEBPACK_IMPORTED_MODULE_0__.cardinalFromDegree)(windData.wind_deg);

  return { speed, direction };
};

const getDetailsFromWeatherData = (detailData) => {
  const humidity = `${detailData.humidity}%`;
  const dewPoint = `${detailData.dew_point}`;
  const clouds = `${detailData.clouds}%`;
  const pressure = `${detailData.pressure} hPa`;
  const uvIndex = `${detailData.uvi}`;
  const visibility = `${detailData.visibility / 1000}KM`;

  return {
    humidity, dewPoint, clouds, pressure, uvIndex, visibility,
  };
};

const getDateTimeString = (date = false) => {
  let timeString = '';
  let dateString = '';
  if (date) {
    timeString = date.toLocaleTimeString();
    dateString = date.toString().split(' ').slice(0, 3).join(' ');
  } else {
    const newDate = new Date();
    timeString = newDate.toLocaleTimeString();
    dateString = newDate.toString().split(' ').slice(0, 3).join(' ');
  }

  return `${dateString}, ${timeString}`;
};




/***/ }),

/***/ "./src/js/weather.js":
/*!***************************!*\
  !*** ./src/js/weather.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getWeatherData": () => (/* binding */ getWeatherData),
/* harmony export */   "getWeatherIcon": () => (/* binding */ getWeatherIcon)
/* harmony export */ });
const openWeatherUrl = 'http://api.openweathermap.org/';
const oneCallEndpoint = 'data/2.5/onecall?';
const OWApiKey = '&APPID=c3f37a8f85bd36886ebfe021ad796145';

const getWeatherIcon = async (iconCode, sizeFactor) => {
  const iconUrl = 'http://openweathermap.org/img/wn/';
  const iconAPI = `${iconUrl}${iconCode}@${sizeFactor}x.png`;
  const response = await fetch(iconAPI, { mode: 'cors' });

  return response.url;
};

const getWeatherData = async (lat, lon) => {
  const oneCallQuery = `lat=${lat}&lon=${lon}`;
  const oneCallUrl = `${openWeatherUrl}${oneCallEndpoint}${oneCallQuery}${OWApiKey}`;
  const response = await fetch(oneCallUrl, { mode: 'cors' });
  const json = await response.json();

  return json;
};




/***/ }),

/***/ "./src/media/cloud_mountain_bg.jpg":
/*!*****************************************!*\
  !*** ./src/media/cloud_mountain_bg.jpg ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__.p + "2a35446e8bc313c0b0f7.jpg";

/***/ }),

/***/ "./node_modules/temporal-polyfill/dist/impl.js":
/*!*****************************************************!*\
  !*** ./node_modules/temporal-polyfill/dist/impl.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Calendar": () => (/* binding */ ir),
/* harmony export */   "Duration": () => (/* binding */ To),
/* harmony export */   "ExtendedDateTimeFormat": () => (/* binding */ Dr),
/* harmony export */   "Instant": () => (/* binding */ Sr),
/* harmony export */   "Now": () => (/* binding */ Cr),
/* harmony export */   "PlainDate": () => (/* binding */ lr),
/* harmony export */   "PlainDateTime": () => (/* binding */ Eo),
/* harmony export */   "PlainMonthDay": () => (/* binding */ Ro),
/* harmony export */   "PlainTime": () => (/* binding */ eo),
/* harmony export */   "PlainYearMonth": () => (/* binding */ ao),
/* harmony export */   "TimeZone": () => (/* binding */ ht),
/* harmony export */   "ZonedDateTime": () => (/* binding */ mo),
/* harmony export */   "dateToTemporalInstant": () => (/* binding */ br)
/* harmony export */ });
var n=1000n,e=1000000n,t=1000000000n,o=60000000000n,r=3600000000000n,i=86400000000000n,s=864e11,a=[1,1e3,1e6,1e9,6e10,36e11,s],c=[9,6,3];function u(n){return n<=6}function d(n){return n>=6}var h=f("overflow",{constrain:0,reject:1},0);function f(n,e,t){const o=function(n,e,t){return(o,r)=>{if(void 0===o){const e=r??t;if(void 0===e)throw new RangeError(`Must specify a ${n}`);return e}if(void 0===e[o])throw new RangeError(`Invalid ${n}: ${o}`);return e[o]}}(n,e,t);return(e,t)=>{const r=g(e);return o(r[n],t)}}function l(n,e,t,o){if(void 0===n)return e;if(!Number.isFinite(n))throw new RangeError("Number must be finite");n=Math.trunc(n);const r=Math.min(Math.max(n,e),t);if(r!==n&&1===o)throw new RangeError("Invalid overflowed value "+n);return r}function m(n,e){const t={};for(const o in e)void 0!==n[o]&&(t[o]=e[o](n[o]));return t}function g(n){if(void 0===n)return{};if(!w(n))throw TypeError("options must be an object or undefined");return n}var y=/object|function/;function w(n){return null!==n&&y.test(typeof n)}var p=f("roundingMode",{halfExpand:Math.round,ceil:Math.ceil,trunc:Math.trunc,floor:Math.floor});function v(){const n=new WeakMap;return[n.get.bind(n),n.set.bind(n)]}function M(n,e){Object.defineProperties(n.prototype,I(e,(n=>({get:n}))))}function I(n,e){const t={};for(const o in n)t[o]=e(n[o],o);return t}function S(n,e,t){const o={};for(const r of e)o[r]=t(n[r]);return o}function F(n,e){const t={};return n.forEach(((n,o)=>{t[n]=e(n,o)})),t}var b=["nanosecond","microsecond","millisecond","second","minute","hour"],N=[...b,"day","week","month","year"],O=N.map((n=>n+"s")),T=F(N,((n,e)=>e)),D=F(O,((n,e)=>e));function Y(n,e,t,o){let r;if(void 0===n){if(void 0===e)throw new RangeError("Unit is required");r=e}else if(r=T[n]??D[n],void 0===r||r<t||r>o)throw new RangeError("Invalid unit "+n);return r}function E(n,e,t,o,r,i){const s=g(n),c=s.roundingIncrement??1,u=Y(s.smallestUnit,t,o,r),d=p(s,i?Math.round:Math.trunc);let h=s.largestUnit;"auto"===h&&(h=void 0);const f=Y(h,e=Math.max(e,u),o,r);if(u>f)throw new RangeError("Bad smallestUnit/largestUnit");if(u<6){const n=a[u+1],e=a[u]*c;if(n===e)throw new RangeError("Must not equal larger unit");if(n%e)throw new RangeError("Must divide into larger unit")}return{smallestUnit:u,largestUnit:f,roundingFunc:d,roundingIncrement:c}}function Z(n,e,t,o,r){const i="string"==typeof n?{smallestUnit:n}:n;if(void 0===e&&!w(i))throw new TypeError("Need rounding options");const c=g(i),u=c.roundingIncrement??1,d=Y(c.smallestUnit,e,t,o),h=p(c,Math.round),f=a[d]*u;if(6===d){if(1!==u)throw new RangeError("When smallestUnit is days, roundingIncrement must be 1")}else{const n=r?s:a[d+1];if(!r&&n===f)throw new RangeError("Must not equal larger unit");if(n%f)throw new RangeError("Must divide into larger unit")}return{smallestUnit:d,roundingFunc:h,incNano:f}}var C=Symbol();function U(n,e,...t){return e instanceof n?e:n.from(e,...t)}var R=class{toJSON(){return this.toString()}},P=class extends R{valueOf(){throw new Error("Cannot convert object using valueOf")}},[B,k]=v(),x=class extends P{constructor(n){super(),k(this,Object.freeze(n))}getISOFields(){return B(this)}};function j(n,e){return n<e?-1:n>e?1:0}function q(n){return j(n,0)}function H(n,e,t){return t(n/e)*e}function L(n){return H(n,6e10,$)}function $(n){return Math.round(Math.abs(n))*q(n)}function z(n,e,t){const o=BigInt(e),r=n/o*o,i=Number(n-r);return r+BigInt(t(i/e))*o}function A(n,e){return(n%e+e)%e}var W=O.concat("sign");function K(n){return S(n,W,(n=>-n||0))}function G(n,e){return J({years:e.years??n.years,months:e.months??n.months,weeks:e.weeks??n.weeks,days:e.days??n.days,hours:e.hours??n.hours,minutes:e.minutes??n.minutes,seconds:e.seconds??n.seconds,milliseconds:e.milliseconds??n.milliseconds,microseconds:e.microseconds??n.microseconds,nanoseconds:e.nanoseconds??n.nanoseconds})}function J(n){return{...n,sign:Q(n)}}function Q(n){let e=0;for(const t of O){if(n[t]){e=q(n[t]);break}}return e}function V(n){let e=9;for(;e>0&&!n[O[e]];)e--;return e}var X={isoHour:0,isoMinute:0,isoSecond:0,isoMillisecond:0,isoMicrosecond:0,isoNanosecond:0},_={hours:0,minutes:0,seconds:0,milliseconds:0,microseconds:0,nanoseconds:0};function nn(n){return{isoHour:n.hour||0,isoMinute:n.minute||0,isoSecond:n.second||0,isoMillisecond:n.millisecond||0,isoMicrosecond:n.microsecond||0,isoNanosecond:n.nanosecond||0}}function en(n){return BigInt(n.days)*i+tn(n)}function tn(i){return BigInt(i.hours)*r+BigInt(i.minutes)*o+BigInt(i.seconds)*t+BigInt(i.milliseconds)*e+BigInt(i.microseconds)*n+BigInt(i.nanoseconds)}function on(n){return 36e11*n.isoHour+6e10*n.isoMinute+1e9*n.isoSecond+1e6*n.isoMillisecond+1e3*n.isoMicrosecond+n.isoNanosecond}function rn(s,a){let c,u=0,d=0,h=0,f=0,l=0,m=0;switch(a){case 6:c=s/i,u=Number(c),s-=c*i;case 5:c=s/r,d=Number(c),s-=c*r;case 4:c=s/o,h=Number(c),s-=c*o;case 3:c=s/t,f=Number(c),s-=c*t;case 2:c=s/e,l=Number(c),s-=c*e;case 1:c=s/n,m=Number(c),s-=c*n}return J({years:0,months:0,weeks:0,days:u,hours:d,minutes:h,seconds:f,milliseconds:l,microseconds:m,nanoseconds:Number(s)})}function sn(n){const e=Math.floor(n/s);n-=e*s;const t=Math.floor(n/36e11);n-=36e11*t;const o=Math.floor(n/6e10);n-=6e10*o;const r=Math.floor(n/1e9);n-=1e9*r;const i=Math.floor(n/1e6);n-=1e6*i;const a=Math.floor(n/1e3);return[{isoHour:t,isoMinute:o,isoSecond:r,isoMillisecond:i,isoMicrosecond:a,isoNanosecond:n-=1e3*a},e]}function an(n,e){return String(n).padStart(e,"0")}function cn(n){return n<0?"-":"+"}var un={gregory:{bce:-1,ce:0},ethioaa:{era0:0},ethiopic:{era0:0,era1:5500},coptic:{era0:-1,era1:0},roc:{beforeroc:-1,minguo:0},buddhist:{be:0},islamic:{ah:0},indian:{saka:0},persian:{ap:0},japanese:{bce:-1,ce:0,meiji:1867,taisho:1911,showa:1925,heisei:1988,reiwa:2018}},dn=class{constructor(n){this.id=n}monthCode(n,e){return"M"+an(n,2)}convertMonthCode(n,e){const t=/L$/.test(n),o=parseInt(n.substr(1));if(t)throw new RangeError("Calendar system doesnt support leap months");return[o,!1]}};function hn(n,e,t,o){let r=un[fn(n)]?.[t];if(void 0===r){if(!o)throw new Error("Unkown era "+t);r=0}return(r+e)*(q(r)||1)}function fn(n){return n.split("-")[0]}var ln=class extends dn{computeFields(n){const e=Mn(n);return{era:void 0,eraYear:void 0,year:e.isoYear,month:e.isoMonth,day:e.isoDay}}epochMilliseconds(n,e,t){return pn(n,e,t)}daysInMonth(n,e){return 2===e?this.inLeapYear(n)?29:28:4===e||6===e||9===e||11===e?30:31}monthsInYear(){return 12}inLeapYear(n){return n%4==0&&(n%100!=0||n%400==0)}guessYearForMonthDay(){return gn}normalizeISOYearForMonthDay(){return gn}},mn=new ln("iso8601"),gn=1972;function yn(n){return wn(n.isoYear,n.isoMonth,n.isoDay,n.isoHour,n.isoMinute,n.isoSecond,n.isoMillisecond,n.isoMicrosecond,n.isoNanosecond)}function wn(t,o,r,i,s,a,c,u,d){return BigInt(pn(t,o,r,i,s,a,c))*e+BigInt(u??0)*n+BigInt(d??0)}function pn(n,e,t,o,r,i,s){const a=q(n);let c,u,d=0;const h=n>=0&&n<1e3,f=h?n+1200:n;for(;d<31;d++){c=t-a*d;const n=Date.UTC(f,e-1,c,o??0,r??0,i??0,s??0);if(!On(n)){u=n+a*d*864e5;break}}return(void 0===u||c<1||c>mn.daysInMonth(n,e))&&Tn(),h&&(u=new Date(u).setUTCFullYear(n)),u}function vn(n){let t=n/e,o=Number(n-t*e);o<0&&(o+=1e6,t-=1n);const r=Math.floor(o/1e3);return o-=1e3*r,{...Mn(Number(t)),isoMicrosecond:r,isoNanosecond:o}}function Mn(n){const[e,t]=Nn(n);return{isoYear:e.getUTCFullYear(),isoMonth:e.getUTCMonth()+1,isoDay:e.getUTCDate()+t,isoHour:e.getUTCHours(),isoMinute:e.getUTCMinutes(),isoSecond:e.getUTCSeconds(),isoMillisecond:e.getUTCMilliseconds()}}function In(n){return n.epochNanoseconds??yn(n.getISOFields())}function Sn(n){return Math.floor(pn(n,1,1)/1e3)}function Fn(n){return Nn(Number(n/e))[0].getUTCFullYear()}function bn(n,e,t){const[o,r]=Nn(pn(n,e,t));return A(o.getUTCDay()+r,7)||7}function Nn(n){const e=q(n);let t,o=0;for(;o<31;o++){const r=new Date(n-e*o*864e5);if(!On(r)){t=r;break}}return void 0===t&&Tn(),[t,e*o]}function On(n){return isNaN(n.valueOf())}function Tn(){throw new RangeError("Date outside of supported range")}function Dn(n,e){return Math.round((e-n)/864e5)}function Yn(n,e){return n+864e5*e}function En(n,e){return function(n,e){return!Zn(n,e)&&n.calendar.id===e.calendar.id}(n,e)&&n.timeZone.id===e.timeZone.id}function Zn(n,e){return j(yn(n.getISOFields()),yn(e.getISOFields()))}function Cn(n,e){return j(on(n.getISOFields()),on(e.getISOFields()))}function Un(n,e){return j(n.year,e.year)||j(n.month,e.month)||j(n.day,e.day)}function Rn(n,e){return j(n.epochNanoseconds,e.epochNanoseconds)}function Pn(n,e,t,o,r){return[n=Number(n),e=l(e,1,o.monthsInYear(n),r),t=l(t,1,o.daysInMonth(n,e),r)]}function Bn(n,e){const[t,o,r]=Pn(n.isoYear,n.isoMonth,n.isoDay,mn,e);return{isoYear:t,isoMonth:o,isoDay:r}}function kn(n,e){return{...Bn(n,e),...xn(n,e)}}function xn({isoHour:n,isoMinute:e,isoSecond:t,isoMillisecond:o,isoMicrosecond:r,isoNanosecond:i},s){return{isoHour:n=l(n,0,23,s),isoMinute:e=l(e,0,59,s),isoSecond:t=l(t,0,59,s),isoMillisecond:o=l(o,0,999,s),isoMicrosecond:r=l(r,0,999,s),isoNanosecond:i=l(i,0,999,s)}}var jn={era:String,eraYear:Number,year:Number,month:Number,monthCode:String},qn={...jn,day:Number},Hn={hour:Number,minute:Number,second:Number,millisecond:Number,microsecond:Number,nanosecond:Number},Ln={era:String,eraYear:Number,year:Number,month:Number,monthCode:String,day:Number},$n=F(O,(()=>Number)),zn=class extends ln{computeFields(n){const e=super.computeFields(n),{year:t}=e;return{...e,era:t<1?"bce":"ce",eraYear:t<1?-(t-1):t}}},An=f("calendarName",{auto:0,never:1,always:2},0);function Wn(n,e=4){const t=g(n),o=t.smallestUnit,r=t.fractionalSecondDigits;let i,s=0,u=1;return void 0!==o?(s=Y(o,void 0,0,e),u=a[s],i=c[s]||0):void 0!==r&&"auto"!==r&&(i=l(r,0,9,1),u=Math.pow(10,9-i)),{smallestUnit:s,fractionalSecondDigits:i,roundingFunc:p(n,Math.trunc),incNano:u}}var Kn=f("disambiguation",{compatible:0,earlier:1,later:2,reject:3},0),Gn=f("timeZoneName",{auto:0,never:1},0);function Jn(n,e){return Qn(n)+"T"+Xn(n,e)}function Qn(n){return Vn(n)+"-"+an(n.isoDay,2)}function Vn(n){const{isoYear:e}=n;return(e<1e3||e>9999?cn(e)+an(Math.abs(e),6):an(e,4))+"-"+an(n.isoMonth,2)}function Xn(n,e){const t=[an(n.isoHour,2)];return e.smallestUnit<=4&&(t.push(an(n.isoMinute,2)),e.smallestUnit<=3&&t.push(an(n.isoSecond,2)+te(n.isoMillisecond,n.isoMicrosecond,n.isoNanosecond,e.fractionalSecondDigits)[0])),t.join(":")}function _n(n){const[e,t]=sn(Math.abs(n)),o=te(e.isoMillisecond,e.isoMicrosecond,e.isoNanosecond,void 0)[0];return cn(n)+an(e.isoHour+24*t,2)+":"+an(e.isoMinute,2)+(e.isoSecond||o?":"+an(e.isoSecond,2)+o:"")}function ne(n,e){return n&&(2===e||1!==e&&"iso8601"!==n)?`[u-ca=${n}]`:""}function ee(n){return n.map((([n,e,t])=>t||n?(n<BigInt(0)?-n:n)+e:"")).join("")}function te(o,r,i,s,c,u){let d=BigInt(i)+BigInt(r)*n+BigInt(o)*e;c&&(d=z(d,void 0===s?a[u]:Math.pow(10,9-s),c));const h=d<0?-d:d,f=h/t;let l=an(Number(h-f*t),9);return l=void 0===s?l.replace(/0+$/,""):l.substr(0,s),[l?"."+l:"",Number(f)*(d<0?-1:1)]}function oe(o){M(o,{epochMicroseconds(){return this.epochNanoseconds/n},epochMilliseconds(){return Number(this.epochNanoseconds/e)},epochSeconds(){return Number(this.epochNanoseconds/t)}})}var re,ie={calendar:"calendar"};for(const n of N)ie[n]="iso"+((re=n).charAt(0).toUpperCase()+re.slice(1));function se(n,e=[]){M(n,F(e.concat("calendar"),(n=>function(){return this.getISOFields()[ie[n]]})))}var ae=["era","eraYear","year","month","monthCode","daysInMonth","daysInYear","monthsInYear","inLeapYear"],ce=[...ae,"day","dayOfWeek","dayOfYear","weekOfYear","daysInWeek"];function ue(n,e){M(n,F(e,(n=>function(){const e=this.calendar[n](this);return Object.defineProperty(this,n,{value:e}),e})))}function de(n,e){(n.prototype||n)[Symbol.toStringTag]="Temporal."+e}var he=f("offset",{prefer:0,use:1,ignore:2,reject:3});function fe({year:n,month:e,day:t},o,r,i){n+=o;const s=l(e,1,r.monthsInYear(n),i);let a=e===s?t:1;return a=l(a,1,r.daysInMonth(n,s),i),{year:n,month:s,day:a}}function le({year:n,month:e,day:t},o,r,i){if(o){if(e+=o,o<0)for(;e<1;)e+=r.monthsInYear(--n);else{let t;for(;e>(t=r.monthsInYear(n));)e-=t,n++}t=l(t,1,r.daysInMonth(n,e),i)}return{year:n,month:e,day:t}}function me({isoYear:n,isoMonth:e,isoDay:t},o){if(o){let r=pn(n,e,t);r=Yn(r,o),({isoYear:n,isoMonth:e,isoDay:t}=Mn(r))}return{isoYear:n,isoMonth:e,isoDay:t}}function ge(n,e){if(V(e)>=6)throw new RangeError("Duration cant have units >= days");return n+tn(e)}function ye(n,e,t=3,o){const{offsetNanoseconds:r,timeZone:i,Z:s}=n;if(void 0!==r&&2!==t){if(1===t||s)return yn(n)-BigInt(r);{const o=we(n,r,i,e);if(void 0!==o)return o;if(3===t)throw new RangeError("Mismatching offset/timezone")}}return i.getInstantFor(Zo(n),o).epochNanoseconds}function we(n,e,t,o){const r=t.getPossibleInstantsFor(Zo(n)),i=yn(n),s=o?L(e):e;for(const n of r){const e=n.epochNanoseconds,t=Number(i-e);if((o?L(t):t)===s)return e}}function pe(n){const{timeZone:e}=n,t={...n,...X,calendar:new ir("iso8601")},o={...me(t,1),...X,calendar:new ir("iso8601")},r=e.getInstantFor(Zo(t)).epochNanoseconds,i=e.getInstantFor(Zo(o)).epochNanoseconds;return Number(i-r)}var ve="(\\d{2})(:?(\\d{2})(:?(\\d{2})([.,](\\d{1,9}))?)?)?",Me="([+-])"+ve,Ie="(Z|"+Me+")?(\\[([^=\\]]+)\\])?(\\[u-ca=([^\\]]+)\\])?",Se=Ye("([+-]\\d{6}|\\d{4})-?(\\d{2})"+Ie),Fe=Ye("(--)?(\\d{2})-?(\\d{2})"+Ie),be=Ye("([+-]\\d{6}|\\d{4})-?(\\d{2})-?(\\d{2})([T ](\\d{2})(:?(\\d{2})(:?(\\d{2})([.,](\\d{1,9}))?)?)?)?"+Ie),Ne=Ye("T?"+ve+Ie),Oe=Ye(Me),Te=/^([-+])?P(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T((\d+)([.,](\d{1,9}))?H)?((\d+)([.,](\d{1,9}))?M)?((\d+)([.,](\d{1,9}))?S)?)?$/i,De=/\u2212/g;function Ye(n){return new RegExp(`^${n}$`,"i")}function Ee(n){return n.replace(De,"-")}function Ze(n){const e=Be(n);if(!e)throw Ge("dateTime",n);return e}function Ce(n){const e=ke(n);if(!e)throw Ge("dateTime",n);return e}function Ue(n){const e=qe(n);if(void 0===e)throw Ge("timeZone",n);return e}function Re(n){let e=function(n){const e=Ne.exec(Ee(n));if(e)return Le(e.slice(1))}(n);if(void 0!==e){if("T"!==n.charAt(0)){const t=xe(n)||je(n);t&&function(n){try{return Bn(n,1),!0}catch(n){return!1}}(t)&&(e=void 0)}}else e=ke(n,!0);if(void 0===e)throw Ge("time",n);return e}var Pe=/^Z$/i;function Be(n){const e=be.exec(Ee(n));if(e)return function(n){const e=n[11];let t,o=!1;e&&(o=Pe.test(e),t=o?0:$e(n.slice(12)));return{...He(n),timeZone:n[21],offsetNanoseconds:t,Z:o}}(e.slice(1))}function ke(n,e,t){const o=be.exec(Ee(n));if(o&&(t||!Pe.test(o[12]))&&(!e||o[4]))return He(o.slice(1))}function xe(n){const e=Se.exec(Ee(n));if(e)return{calendar:(t=e.slice(1))[14],isoYear:We(t[0]),isoMonth:We(t[1]),isoDay:1};var t}function je(n){const e=Fe.exec(Ee(n));if(e)return{calendar:(t=e.slice(1))[15],isoYear:gn,isoMonth:We(t[1]),isoDay:We(t[2])};var t}function qe(n){const e=Oe.exec(Ee(n));if(e)return $e(e.slice(1))}function He(n){return{calendar:n[23],isoYear:We(n[0]),isoMonth:We(n[1]),isoDay:We(n[2]),...Le(n.slice(4))}}function Le(n){const e=Ae(n[4]);return{...sn(ze(n[6]||""))[0],isoHour:Ae(n[0]),isoMinute:Ae(n[2]),isoSecond:60===e?59:e}}function $e(n){return("+"===n[0]?1:-1)*function(n){return 36e11*Ae(n[0])+6e10*Ae(n[2])+1e9*Ae(n[4])+ze(n[6]||"")}(n.slice(1))}function ze(n){return parseInt(n.padEnd(9,"0"))}function Ae(n){return parseInt(n||"0")}function We(n){return parseInt(n||"1")}function Ke(n){return void 0===n?void 0:parseInt(n)}function Ge(n,e){throw new RangeError(`Cannot parse ${n} '${e}'`)}function Je(n){return{...n,calendar:void 0===n.calendar?sr():new ir(n.calendar)}}function Qe(n){return{...Je(n),timeZone:new ht(n.timeZone)}}var Ve=class{constructor(n){this.id=n}},Xe=class extends Ve{constructor(n,e){super(n),this.offsetNano=e}getPossibleOffsets(){return[this.offsetNano]}getOffset(){return this.offsetNano}getTransition(){}};function _e(n,e){const t={},o=n.formatToParts(e);for(const n of o)t[n.type]=n.value;return t}var nt={bc:"bce",ad:"ce"};function et(n){return n=n.toLowerCase().normalize("NFD").replace(/[^a-z0-9]/g,""),nt[n]||n}var tt=Intl.DateTimeFormat;function ot(n){return[].concat(n||[])}var rt={"Pacific/Apia":{2011:[[1301752800000000000n,-36e12,-396e11],[1316872800000000000n,-396e11,-36e12],[1325239200000000000n,-36e12,504e11]]}},it=(new Date).getUTCFullYear()+10,st=[182,91,273],at=class extends Ve{constructor(n){const e=new tt("en-GB",{era:"short",year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:n});super(e.resolvedOptions().timeZone),this.format=e,this.yearEndOffsets={},this.transitionsInYear=rt[n]||{}}getPossibleOffsets(n){let e;const t=[this.getTransition(n,-1),this.getTransition(n-1n,1)].filter(Boolean);for(const o of t){const[t,r,i]=o,s=n-BigInt(r),a=n-BigInt(i);if(t>s&&t>a)return[r];if(!(t<=s&&t<=a))return[r,i];e=i}return void 0!==e?[e]:[1e9*this.getYearEndOffsetSec(Fn(n))]}getOffset(n){return 1e9*this.getOffsetForEpochSecs(Number(n/t))}getOffsetForEpochSecs(n){const e=_e(this.format,1e3*n);let t=parseInt(e.year);"bce"===et(e.era)&&(t=-(t-1));const o=pn(t,parseInt(e.month),parseInt(e.day),parseInt(e.hour),parseInt(e.minute),parseInt(e.second));return Math.floor(o/1e3)-n}getTransition(n,e){let t=Fn(n);if(t>it){const o=this.getTransitionFrom(t,t+e,e,n);if(o||e>0)return o;t=it}return this.getTransitionFrom(Math.max(t,1847),e<0?1846:it,e,n)}getTransitionFrom(n,e,t,o){for(;n!==e;n+=t){let e=this.getTransitionsInYear(n);t<0&&(e=e.slice().reverse());for(const n of e)if(j(n[0],o)===t)return n}}getYearEndOffsetSec(n){const{yearEndOffsets:e}=this;return e[n]||(e[n]=this.getOffsetForEpochSecs(Sn(n+1)-1))}getTransitionsInYear(n){const{transitionsInYear:e}=this;return e[n]||(e[n]=this.computeTransitionsInYear(n))}computeTransitionsInYear(n){const e=this.getYearEndOffsetSec(n-1),t=this.getYearEndOffsetSec(n),o=Sn(n)-1,r=Sn(n+1)-1;if(e!==t)return[this.searchTransition(o,r,e,t)];const i=this.searchIsland(e,o);return void 0!==i?[this.searchTransition(o,i[0],e,i[1]),this.searchTransition(i[0],r,i[1],t)]:[]}searchTransition(n,e,o,r){for(;e-n>1;){const t=Math.floor(n+(e-n)/2);this.getOffsetForEpochSecs(t)===o?n=t:e=t}return[BigInt(e)*t,1e9*o,1e9*r]}searchIsland(n,e){for(const t of st){const o=e+86400*t,r=this.getOffsetForEpochSecs(o);if(r!==n)return[o,r]}}},ct={UTC:new Xe("UTC",0)};var[ut,dt]=v(),ht=class extends R{constructor(n){if(!n)throw new RangeError("Invalid timezone ID");super(),dt(this,function(n){const e=(n=String(n)).toLocaleUpperCase();if(ct[e])return ct[e];const t=qe(n);if(void 0!==t){if(Math.abs(t)>s)throw new RangeError("Offset out of bounds");return new Xe(_n(t),t)}return ct[e]=new at(n)}(n))}static from(n){if("object"==typeof n)return function(n){return n.timeZone}(n)?function(n){if("object"==typeof n){if("string"==typeof n.id)return n;throw new RangeError("Invalid timeZone")}return new ht(String(n))}(n.timeZone):n;const e=Be(String(n));if(e){if(e.timeZone){const n=Qe(e);return function(n){const{offsetNanoseconds:e,timeZone:t,Z:o}=n;if(void 0!==e&&!o&&void 0===we(n,e,t,!0))throw new RangeError("Mismatching offset/timezone")}(n),n.timeZone}if(e.Z)return new ht("UTC");if(void 0!==e.offsetNanoseconds)return new ht(_n(e.offsetNanoseconds))}return new ht(n)}get id(){return this.toString()}getOffsetStringFor(n){return _n(this.getOffsetNanosecondsFor(n))}getOffsetNanosecondsFor(n){const e=U(Sr,n);return ut(this).getOffset(e.epochNanoseconds)}getPlainDateTimeFor(n,e=sr()){const t=U(Sr,n);return Zo({...vn(t.epochNanoseconds+BigInt(this.getOffsetNanosecondsFor(t))),calendar:U(ir,e)})}getInstantFor(n,e){const t=Kn(e),o=yn(U(Eo,n).getISOFields()),r=ut(this).getPossibleOffsets(o);let i;if(1===r.length||0===t)i=r[0];else{if(3===t)throw new RangeError("Ambiguous offset");i=Math[1===t?"max":"min"](...r)}return new Sr(o-BigInt(i))}getPossibleInstantsFor(n){const e=yn(U(Eo,n).getISOFields());let t=ut(this).getPossibleOffsets(e);return 2===t.length&&t[0]<t[1]&&(t=[]),t.map((n=>new Sr(e-BigInt(n))))}getPreviousTransition(n){const e=U(Sr,n),t=ut(this).getTransition(e.epochNanoseconds,-1);return t?new Sr(t[0]):null}getNextTransition(n){const e=U(Sr,n),t=ut(this).getTransition(e.epochNanoseconds,1);return t?new Sr(t[0]):null}toString(){return ut(this).id}};function ft(n){if(void 0===n.timeZone)throw new TypeError("Must specify timeZone");return U(ht,n.timeZone)}de(ht,"TimeZone");var lt=Pt((function(n,e,t){const o=Ot(n,e,t);if(o)return{...o,timeZone:ft(n),offsetNanoseconds:void 0!==n.offset?Ue(String(n.offset)):void 0}})),mt=Pt(Ot),gt=Pt(Tt),yt=Pt((function(n,e){const t=ur(n),o=Ct(n,jn,t);if(Bt(o))return t.yearMonthFromFields(o,e)})),wt=Pt((function(n,e){const t=ur(n),o=Ct(n,Ln,t);if(Bt(o))return void 0===n.year&&void 0===n.calendar&&(o.year=gn),t.monthDayFromFields(o,e)})),pt=Pt(Dt),vt=Pt((function(n,e,t,o){const r=Yt(n,e,t,o),i=void 0!==e.offset;if(r||i)return{...r||n.getISOFields(),timeZone:n.timeZone,offsetNanoseconds:i?Ue(String(e.offset)):n.offsetNanoseconds}}),!0),Mt=Pt(Yt,!0),It=Pt(Et,!0),St=Pt((function(n,e,t){const o=n.calendar;if(Bt(Ct(e,jn,o))){const r=Rt(n,e,jn,o);return o.yearMonthFromFields(r,t)}}),!0),Ft=Pt((function(n,e,t){const o=n.calendar;if(Bt(Ct(e,Ln,o))){const r=Rt(n,e,Ln,o);return o.monthDayFromFields(r,t)}}),!0),bt=Pt(Zt,!0),Nt=Pt((function(n){const e=m(n,$n);if(Bt(e))return e}));function Ot(n,e,t){const o=Tt(n,t),r=Dt(n,e);if(o)return{...o.getISOFields(),...r||X}}function Tt(n,e){const t=ur(n),o=Ct(n,qn,t);if(Bt(o))return t.dateFromFields(o,e)}function Dt(n,e){const t=m(n,Hn);if(Bt(t))return xn(nn(t),e)}function Yt(n,e,t,o){const r=Et(n,e,o),i=Zt(n,e,t);if(r||i)return{...n.getISOFields(),...r?r.getISOFields():{},...i}}function Et(n,e,t){const o=n.calendar,r=Ct(e,qn,o);if(Bt(r)){const e=Rt(n,r,qn,o);return o.dateFromFields(e,t)}}function Zt(n,e,t){const o=m(e,Hn);if(Bt(o)){return xn(nn((r=n,i=o,I(Hn,((n,e)=>i[e]??r[e])))),t)}var r,i}function Ct(n,e,t){let o=Object.keys(e);return o=t.fields?t.fields(o):Object.keys(Ut(t,o)),Ut(n,o)}function Ut(n,e){const t={};for(const o of e)void 0!==n[o]&&(t[o]=n[o]);return t}function Rt(n,e,t,o){const r=Ct(n,t,o);return o.mergeFields?o.mergeFields(r,e):ar(r,e)}function Pt(n,e){return(...t)=>{if(e){const n=t[1];if(!w(n))throw new TypeError("must be object-like");if(void 0!==n.calendar)throw new TypeError("calendar not allowed");if(void 0!==n.timeZone)throw new TypeError("timeZone not allowed")}const o=n(...t);if(!o)throw new TypeError("No valid fields");return o}}function Bt(n){return Object.keys(n).length>0}function kt(n,e){const t=yn(n);xt(t),_o(t,e)}function xt(n){(n<-8640000086399999999999n||n>8640000086399999999999n)&&Tn()}function jt(n,e){const t=Lt(on(n),e),[o,r]=sn(t);return{...me(n,r),...o}}function qt(n,e){const t=Lt(on(n),e),[o]=sn(t);return o}function Ht(n,e){const[t,o]=function(n){const e=vn(n);return[wn(e.isoYear,e.isoMonth,e.isoDay),on(e)]}(n),r=Lt(o,e);return t+BigInt(r)}function Lt(n,e){return H(n,e.incNano,e.roundingFunc)}function $t(n,e,t){return(o,r)=>{const i=Jt(n,r)?{}:{...n,...e};return{buildKey:Gt(o,r,!1),buildFormat:function(n,e){return new tt(o,{calendar:n,timeZone:e||void 0,...i,...r,...t})},buildEpochMilli:zt}}}function zt(n){return n.epochMilliseconds}function At(n,e,t){return(o,r)=>{const i=Jt(n,r)?{}:n;return{buildKey:Gt(o,r,t),buildFormat:function(n,t){return new tt(o,{calendar:n,...i,...r,...e,timeZone:t,timeZoneName:void 0})},buildEpochMilli:void 0!==r.timeZone?Wt.bind(null,new ht(r.timeZone)):Kt}}}function Wt(n,e){const t=Zo({...X,...e.getISOFields()});return n.getInstantFor(t).epochMilliseconds}function Kt(n){return pn((e=n.getISOFields()).isoYear,e.isoMonth,e.isoDay,e.isoHour,e.isoMinute,e.isoSecond,e.isoMillisecond);var e}function Gt(n,e,t){const o=e.calendar??function(n){for(const e of n){const n=e.match(/-u-ca-(.*)$/);if(n)return n[1]}return}(n),r=e.timeZone;return function(n,e){const i=n.calendar?.id,s=n.timeZone?.id;if(e){if(e.calendar?.id!==i)throw new RangeError("Mismatching calendar");if(e.timeZone?.id!==s)throw new RangeError("Mismatching timeZone")}if((t||"iso8601"!==i)&&void 0!==i&&void 0!==o&&o!==i)throw new RangeError("Non-iso calendar mismatch");if(void 0!==s&&void 0!==r&&r!==s)throw new RangeError("Given timeZone must agree");return[o||i||"iso8601",r||s||"UTC"]}}function Jt(n,e){for(const t in n)if(void 0!==e[t])return!0;return!1}function Qt(n,e){n.prototype.toLocaleString=function(n,t){const o=e(ot(n),t||{});return o.buildFormat(...o.buildKey(this)).format(o.buildEpochMilli(this))},n.prototype[C]=e}function Vt(n){return n?.[C]}function Xt(n){const e=function(n){const e=Te.exec(Ee(n));if(e){let n,t,o,r;[n,r]=_t(e[8],e[10],5,void 0),[t,r]=_t(e[12],e[14],4,r),[o,r]=_t(e[16],e[18],3,r);const i=function(n){const e={};for(const t in n)void 0!==n[t]&&(e[t]=n[t]);return e}({years:Ke(e[2]),months:Ke(e[3]),weeks:Ke(e[4]),days:Ke(e[5]),hours:n,minutes:t,seconds:o});if(!Object.keys(i).length)throw new RangeError("Duration string must have at least one field");const s=rn(BigInt(r||0),2);i.milliseconds=s.milliseconds,i.microseconds=s.microseconds,i.nanoseconds=s.nanoseconds;let a=J(i);return"-"===e[1]&&(a=K(a)),a}}(n);if(void 0===e)throw Ge("duration",n);return e}function _t(n,e,t,o){if(void 0!==n){if(void 0!==o)throw new RangeError("Partial units must be last unit");return[parseInt(n),void 0!==e?ze(e)*(a[t]/1e9):void 0]}if(void 0!==o){const n=Math.trunc(o/a[t]);return[n,o-n*a[t]]}return[void 0,void 0]}var no=f("offset",{auto:0,never:1},0),eo=class extends x{constructor(n=0,e=0,t=0,o=0,r=0,i=0){super({...xn({isoHour:n,isoMinute:e,isoSecond:t,isoMillisecond:o,isoMicrosecond:r,isoNanosecond:i},1),calendar:sr()})}static from(n,e){const t=h(e);return to(n instanceof eo?n.getISOFields():"object"==typeof n?pt(n,t):Re(String(n)))}static compare(n,e){return Cn(U(eo,n),U(eo,e))}with(n,e){return to(bt(this,n,h(e)))}add(n){return ro(this,U(To,n))}subtract(n){return ro(this,K(U(To,n)))}until(n,e){return io(this,U(eo,n),e)}since(n,e){return io(U(eo,n),this,e)}round(n){const e=Z(n,void 0,0,5);return to(qt(this.getISOFields(),e))}equals(n){return!Cn(this,U(eo,n))}toString(n){const e=Wn(n);return Xn(qt(this.getISOFields(),e),e)}toZonedDateTime(n){const e=U(lr,n.plainDate),t=U(ht,n.timeZone);return go({...e.getISOFields(),...this.getISOFields(),timeZone:t})}toPlainDateTime(n){return U(lr,n).toPlainDateTime(this)}};function to(n){return new eo(n.isoHour,n.isoMinute,n.isoSecond,n.isoMillisecond,n.isoMicrosecond,n.isoNanosecond)}function oo(n){return U(eo,n??{hour:0})}function ro(n,e){return to(function(n,e){const t=on(n)+Number(tn(e)),[o]=sn(t);return o}(n.getISOFields(),e))}function io(n,e,t){const o=E(t,5,0,0,5);return Do(function(n,e,t){const o=H(on(e)-on(n),a[t.smallestUnit]*t.roundingIncrement,t.roundingFunc);return rn(BigInt(o),t.largestUnit)}(n.getISOFields(),e.getISOFields(),o))}de(eo,"PlainTime"),se(eo,b),Qt(eo,(function(n,e){return{buildKey:()=>["",""],buildFormat:()=>new tt(n,{hour:"numeric",minute:"2-digit",second:"2-digit",...e,timeZone:"UTC",timeZoneName:void 0,year:void 0,month:void 0,day:void 0,weekday:void 0}),buildEpochMilli:n=>Math.trunc(on(n.getISOFields())/1e6)}}));var so={day:1},ao=class extends x{constructor(n,e,t=sr(),o=1){const r=Bn({isoYear:n,isoMonth:e,isoDay:o},1),i=U(ir,t);var s,a;s=r,a=i.id,_o(yn(s),a),super({...r,calendar:i})}static from(n,e){if(h(e),n instanceof ao)return co(n.getISOFields());if("object"==typeof n)return yt(n,e);const t=function(n){const e=xe(n)||ke(n);if(!e)throw Ge("yearMonth",n);return e}(String(n));return void 0===t.calendar&&(t.isoDay=1),co(Je(t))}static compare(n,e){return Zn(U(ao,n),U(ao,e))}with(n,e){return St(this,n,e)}add(n,e){return uo(this,U(To,n),e)}subtract(n,e){return uo(this,K(U(To,n)),e)}until(n,e){return ho(this,U(ao,n),!1,e)}since(n,e){return ho(this,U(ao,n),!0,e)}equals(n){return!Zn(this,U(ao,n))}toString(n){const e=this.getISOFields(),t=e.calendar.toString(),o=An(n);return("iso8601"===t?Vn(e):Qn(e))+ne(t,o)}toPlainDate(n){return this.calendar.dateFromFields({year:this.year,month:this.month,day:n.day})}};function co(n){return new ao(n.isoYear,n.isoMonth,n.calendar,n.isoDay)}function uo(n,e,t){return n.toPlainDate({day:e.sign<0?n.daysInMonth:1}).add(e,t).toPlainYearMonth()}function ho(n,e,t,o){return Do(wr(n.toPlainDate(so),e.toPlainDate(so),dr(n,e),t,E(o,9,8,8,9)))}de(ao,"PlainYearMonth"),se(ao),ue(ao,ae),Qt(ao,At({year:"numeric",month:"numeric"},{weekday:void 0,day:void 0,hour:void 0,minute:void 0,second:void 0},!0));var[fo,lo]=v(),mo=class extends x{constructor(n,e,t=sr()){const o=U(ht,e),r=U(ir,t),[i,s]=yo(n,o);kt(i,r.id),super({...i,calendar:r,timeZone:o,offset:_n(s)}),lo(this,{epochNanoseconds:n,offsetNanoseconds:s})}static from(n,e){const t=he(e,3),o=h(e);if(n instanceof mo)return new mo(n.epochNanoseconds,n.timeZone,n.calendar);const r="object"==typeof n;return go(r?lt(n,o,e):Qe(Ze(String(n))),!r,t,e)}static compare(n,e){return Rn(U(mo,n),U(mo,e))}get timeZone(){return this.getISOFields().timeZone}get epochNanoseconds(){return fo(this).epochNanoseconds}get offsetNanoseconds(){return fo(this).offsetNanoseconds}get offset(){return this.getISOFields().offset}with(n,e){Kn(e);const t=h(e),o=he(e,0);return go(vt(this,n,t,e),!1,o,e)}withPlainDate(n){const e=U(lr,n),t=e.toPlainDateTime(this),{timeZone:o}=this,r=o.getInstantFor(t);return new mo(r.epochNanoseconds,o,hr(this,e))}withPlainTime(n){return go({...this.getISOFields(),...void 0===n?X:U(eo,n).getISOFields()})}withCalendar(n){return new mo(this.epochNanoseconds,this.timeZone,n)}withTimeZone(n){return new mo(this.epochNanoseconds,n,this.calendar)}add(n,e){return wo(this,U(To,n),e)}subtract(n,e){return wo(this,K(U(To,n)),e)}until(n,e){return vo(this,U(mo,n),!1,e)}since(n,e){return vo(this,U(mo,n),!0,e)}round(n){return po(this,Z(n,void 0,0,6))}equals(n){return En(this,U(mo,n))}startOfDay(){return go({...this.getISOFields(),...X,offsetNanoseconds:this.offsetNanoseconds},!1,0)}get hoursInDay(){return pe(this.getISOFields())/36e11}toString(n){const e=Wn(n),t=no(n),o=Gn(n),r=An(n),i=po(this,e);return Jn(i.getISOFields(),e)+(0===t?_n(L(i.offsetNanoseconds)):"")+(s=this.timeZone.toString(),1!==o?`[${s}]`:"")+ne(this.calendar.toString(),r);var s}toPlainYearMonth(){return co(this.getISOFields())}toPlainMonthDay(){return this.calendar.monthDayFromFields(this)}toPlainDateTime(){return Zo(this.getISOFields())}toPlainDate(){return mr(this.getISOFields())}toPlainTime(){return to(this.getISOFields())}toInstant(){return new Sr(this.epochNanoseconds)}};function go(n,e,t,o){const r=ye(n,e,t,o);return new mo(r,n.timeZone,n.calendar)}function yo(n,e){const t=new Sr(n),o=e.getOffsetNanosecondsFor(t);return[vn(n+BigInt(o)),o]}function wo(n,e,t){const o=n.getISOFields(),r=function(n,e,t){const{calendar:o,timeZone:r}=n,i=o.dateAdd(mr(n),G(e,_),t),s=Zo({...n,...i.getISOFields()});return r.getInstantFor(s).epochNanoseconds+tn(e)}(o,e,t);return new mo(r,o.timeZone,o.calendar)}function po(n,e){const t=n.getISOFields(),o=function(n,e,t){const{calendar:o,timeZone:r}=n;let i,s,a=on(n);return 6===t.smallestUnit?(i=X,s=t.roundingFunc(a/pe(n))):(a=Lt(a,t),[i,s]=sn(a)),ye({...me(n,s),...i,offsetNanoseconds:e,calendar:o,timeZone:r},!1,0)}(t,n.offsetNanoseconds,e);return new mo(o,t.timeZone,t.calendar)}function vo(n,e,t,o){const r=E(o,5,0,0,9),{largestUnit:i}=r;if(i>=6&&n.timeZone.id!==e.timeZone.id)throw new Error("Must be same timeZone");return Do(yr(n,e,dr(n,e),t,r))}function Mo(n){if(void 0===n)return;if(w(n))return n instanceof mo||n instanceof Eo?n:U(void 0!==n.timeZone?mo:Eo,n);if("symbol"==typeof n)throw new TypeError("Incorrect relativeTo type");const e=Be(String(n));if(e)return void 0!==e.timeZone?go(Qe(e),!0):Zo(Je(e));throw new RangeError("Invalid value of relativeTo")}function Io(n,e,t,o){return(t instanceof lr?function(n,e,t,o){const r=t.add(n);return[o.dateUntil(t,r,{largestUnit:N[e]}),r]}(n,Math.max(6,e),t,o):So(n,e,t,o))[0]}function So(n,e,t,o,r){const i=!0!==r&&e>7&&n.weeks;i&&(n=G(n,{weeks:0}));let s=t.add(n),a=pr(t,s,o,e);return i&&(a=G(a,{weeks:i}),s=s.add({weeks:i})),[a,s]}function Fo(n,e,t,o){const r=O[e],{sign:i}=n;if(!i)return n;const s={};for(let t=9;t>=e;t--){const e=O[t];s[e]=n[e]}const a={[r]:i},c=t.add(s),u=c.add(a),d=In(c),h=In(u),f=In(o),l=Number(f-d)/Number(h-d)*i;return s[r]+=l,s}function bo(n,e,t,o,r,i){const{largestUnit:s,smallestUnit:c,roundingIncrement:u,roundingFunc:h}=i;if(!d(s)){return rn(z((In(t)-In(e))*(r?-1n:1n),a[c]*u,h),s)}let f=Fo(n,c,e,t);const l=O[c];function m(){const n=f[l];f[l]=H(n,u,h)}return h===Math.round&&m(),r&&(f=K(f)),h!==Math.round&&m(),c>0&&(f=r?K(Io(K(f),s,e,o)):Io(f,s,e,o)),f}de(mo,"ZonedDateTime"),se(mo,b),ue(mo,ce),oe(mo),Qt(mo,$t({year:"numeric",month:"numeric",day:"numeric",weekday:void 0,hour:"numeric",minute:"2-digit",second:"2-digit"},{timeZoneName:"short"},{}));var[No,Oo]=v(),To=class extends P{constructor(n=0,e=0,t=0,o=0,r=0,i=0,s=0,a=0,c=0,u=0){super();const d=Nt({years:n,months:e,weeks:t,days:o,hours:r,minutes:i,seconds:s,milliseconds:a,microseconds:c,nanoseconds:u});Oo(this,function(n){const e=J(n),{sign:t}=e;for(const n of O){const o=e[n],r=q(e[n]);if(r&&r!==t)throw new RangeError("All fields must be same sign");if(!Number.isInteger(o))throw new RangeError("Duration fields must be integers")}return e}(d))}static from(n){return Do("object"==typeof n?Nt(n):Xt(n))}static compare(n,e,t){return function(n,e,t){if(void 0===t&&V(n)<=6&&V(e)<=6)return j(en(n),en(e));if(!t)throw new RangeError("Need relativeTo");const o=t.add(n),r=t.add(e);return void 0!==t.epochNanoseconds?Rn(o,r):Zn(o,r)}(U(To,n),U(To,e),Mo(g(t).relativeTo))}get years(){return No(this).years}get months(){return No(this).months}get weeks(){return No(this).weeks}get days(){return No(this).days}get hours(){return No(this).hours}get minutes(){return No(this).minutes}get seconds(){return No(this).seconds}get milliseconds(){return No(this).milliseconds}get microseconds(){return No(this).microseconds}get nanoseconds(){return No(this).nanoseconds}get sign(){return No(this).sign}get blank(){return!this.sign}with(n){return Do({...No(this),...Nt(n)})}negated(){return Do(K(No(this)))}abs(){return Do(S(No(this),W,(n=>Math.abs(n))))}add(n,e){return Yo(this,U(To,n),e)}subtract(n,e){return Yo(this,K(U(To,n)),e)}round(n){const e="string"==typeof n?{smallestUnit:n}:n;if(!w(e))throw new TypeError("Must specify options");if(void 0===e.largestUnit&&void 0===e.smallestUnit)throw new RangeError("Must specify either largestUnit or smallestUnit");const t=E(e,V(this),0,0,9,!0),o=Mo(e.relativeTo);return Do(function(n,e,t,o){const{largestUnit:r,smallestUnit:i,roundingIncrement:s,roundingFunc:c}=e;if(void 0===t&&V(n)<=6&&u(r)&&u(i))return rn(z(en(n),a[i]*s,c),r);if(!t)throw new RangeError("Need relativeTo");const[d,h]=So(n,r,t,o);return bo(d,t,h,o,!1,e)}(this,t,o,o?o.calendar:void 0))}total(n){const e=function(n){let e,t;return"string"==typeof n?t=n:(t=g(n).unit,e=n.relativeTo),{unit:Y(t,void 0,0,9),relativeTo:e}}(n),t=Mo(e.relativeTo);return function(n,e,t,o){if(void 0===t&&V(n)<=6&&u(e))return Number(en(n))/a[e];if(!t)throw new RangeError("Need relativeTo");const[r,i]=So(n,e,t,o,!0);return Fo(r,e,t,i)[O[e]]}(this,e.unit,t,t?t.calendar:void 0)}toString(n){const e=Wn(n,3);return function(n,e){const{smallestUnit:t,fractionalSecondDigits:o,roundingFunc:r}=e,{sign:i}=n,s=BigInt(n.hours),a=BigInt(n.minutes);let c=BigInt(n.seconds),u="";if(t<=3){const e=te(n.milliseconds,n.microseconds,n.nanoseconds,o,r,t);u=e[0],c+=BigInt(e[1])}const d=void 0!==o||u||!i;return(i<0?"-":"")+"P"+ee([[BigInt(n.years),"Y"],[BigInt(n.months),"M"],[BigInt(n.weeks),"W"],[BigInt(n.days),"D"]])+(s||a||c||d?"T"+ee([[s,"H"],[a,"M"],[t<=3?c:BigInt(0),u+"S",d]]):"")}(No(this),e)}toLocaleString(n,e){return this.toString()}};function Do(n){return new To(n.years,n.months,n.weeks,n.days,n.hours,n.minutes,n.seconds,n.milliseconds,n.microseconds,n.nanoseconds)}function Yo(n,e,t){const o=Mo(g(t).relativeTo);return Do(function(n,e,t,o){const r=Math.max(V(n),V(e));if(void 0===t&&r<=6)return rn(en(n)+en(e),r);if(!t)throw new RangeError("Need relativeTo");const i=t.add(n).add(e);return pr(t,i,o,r)}(n,e,o,o?o.calendar:void 0))}de(To,"Duration");var Eo=class extends x{constructor(n,e,t,o=0,r=0,i=0,s=0,a=0,c=0,u=sr()){const d=kn({isoYear:n,isoMonth:e,isoDay:t,isoHour:o,isoMinute:r,isoSecond:i,isoMillisecond:s,isoMicrosecond:a,isoNanosecond:c},1),h=U(ir,u);kt(d,h.id),super({...d,calendar:h})}static from(n,e){const t=h(e);return Zo(n instanceof Eo?n.getISOFields():"object"==typeof n?mt(n,t,e):Je(Ce(String(n))))}static compare(n,e){return Zn(U(Eo,n),U(Eo,e))}with(n,e){const t=h(e);return Zo(Mt(this,n,t,e))}withPlainDate(n){const e=U(lr,n);return Zo({...this.getISOFields(),...e.getISOFields(),calendar:hr(this,e)})}withPlainTime(n){return Zo({...this.getISOFields(),...oo(n).getISOFields()})}withCalendar(n){return Zo({...this.getISOFields(),calendar:U(ir,n)})}add(n,e){return Co(this,U(To,n),e)}subtract(n,e){return Co(this,K(U(To,n)),e)}until(n,e){return Uo(this,U(Eo,n),!1,e)}since(n,e){return Uo(this,U(Eo,n),!0,e)}round(n){const e=Z(n,void 0,0,6);return Zo({...jt(this.getISOFields(),e),calendar:this.calendar})}equals(n){return!Zn(this,U(Eo,n))}toString(n){const e=Wn(n),t=An(n);return Jn(jt(this.getISOFields(),e),e)+ne(this.calendar.toString(),t)}toZonedDateTime(n,e){const t=U(ht,n),o=t.getInstantFor(this,e);return new mo(o.epochNanoseconds,t,this.calendar)}toPlainYearMonth(){return co(this.getISOFields())}toPlainMonthDay(){return this.calendar.monthDayFromFields(this)}toPlainDate(){return mr(this.getISOFields())}toPlainTime(){return to(this.getISOFields())}};function Zo(n){return new Eo(n.isoYear,n.isoMonth,n.isoDay,n.isoHour,n.isoMinute,n.isoSecond,n.isoMillisecond,n.isoMicrosecond,n.isoNanosecond,n.calendar)}function Co(n,e,t){const o=function(n,e,t){const{calendar:o}=n;return vn(yn(o.dateAdd(mr(n),G(e,_),t).getISOFields())+BigInt(on(n))+tn(e))}(n.getISOFields(),e,t);return Zo({...o,calendar:n.calendar})}function Uo(n,e,t,o){const r=E(o,6,0,0,9);return Do(yr(n,e,dr(n,e),t,r))}de(Eo,"PlainDateTime"),se(Eo,b),ue(Eo,ce),Qt(Eo,At({year:"numeric",month:"numeric",day:"numeric",weekday:void 0,hour:"numeric",minute:"2-digit",second:"2-digit"},{}));var Ro=class extends x{constructor(n,e,t=sr(),o=gn){super({...Bn({isoYear:o,isoMonth:n,isoDay:e},1),calendar:t})}static from(n,e){if(h(e),n instanceof Ro)return Po(n.getISOFields());if("object"==typeof n)return wt(n,e);const t=function(n){const e=je(n)||ke(n);if(!e)throw Ge("monthDay",n);return e}(String(n));return void 0===t.calendar&&(t.isoYear=gn),Po(Je(t))}with(n,e){return Ft(this,n,e)}equals(n){return!Zn(this,U(Ro,n))}toString(n){const e=this.getISOFields(),t=e.calendar.toString(),o=An(n);return("iso8601"===t?function(n){return an(n.isoMonth,2)+"-"+an(n.isoDay,2)}(e):Qn(e))+ne(t,o)}toPlainDate(n){return this.calendar.dateFromFields({year:n.year,monthCode:this.monthCode,day:this.day},{overflow:"reject"})}};function Po(n){return new Ro(n.isoMonth,n.isoDay,n.calendar,n.isoYear)}function Bo(n){return n instanceof lr||n instanceof Eo||n instanceof mo||n instanceof ao||n instanceof Ro}function ko(n,e,t){let o;if(n instanceof lr)o=n;else if(Bo(n)){if(t&&n instanceof Ro)throw new TypeError("PlainMonthDay not allowed");o=mr(n.getISOFields())}else o=lr.from(n);return fr(o.calendar,e),o}function xo(n,e,t){if(Bo(n))return n.getISOFields();let{era:o,eraYear:r,year:i,month:s,monthCode:a,day:c}=n;const u=void 0!==r&&void 0!==o?hn(e.id,r,o):void 0;if(void 0===i){if(void 0===u)throw new TypeError("Must specify either a year or an era & eraYear");i=u}else if(void 0!==u&&u!==i)throw new RangeError("year and era/eraYear must match");if(void 0===c)throw new TypeError("Must specify day");const d=h(t);if(void 0!==a){const[n,t]=e.convertMonthCode(a,i);if(void 0!==s&&s!==n)throw new RangeError("Month doesnt match with monthCode");if(s=n,t){if(1===d)throw new RangeError("Month code out of range");c=e.daysInMonth(i,s)}}else if(void 0===s)throw new TypeError("Must specify either a month or monthCode");return[i,s,c]=Pn(i,s,c,e,d),Mn(e.epochMilliseconds(i,s,c))}function jo(n,e){if(Bo(n)){if(e&&n instanceof Ro)throw new TypeError("PlainMonthDay not allowed");return n.getISOFields()}return lr.from(n).getISOFields()}function qo(n,e){return Dn(n.epochMilliseconds(e,1,1),n.epochMilliseconds(e+1,1,1))}function Ho(n,e,t,o){return Dn(n.epochMilliseconds(e,1,1),n.epochMilliseconds(e,t,o))+1}de(Ro,"PlainMonthDay"),se(Ro),ue(Ro,["monthCode","day"]),Qt(Ro,At({month:"numeric",day:"numeric"},{weekday:void 0,year:void 0,hour:void 0,minute:void 0,second:void 0},!0));var Lo={hebrew:6,chinese:0,dangi:0},$o=class extends dn{constructor(n){const e=zo(n);if(t=n,o=e.resolvedOptions().calendar,fn(t)!==fn(o))throw new RangeError("Invalid calendar: "+n);var t,o;super(n),this.format=e,this.yearCorrection=this.computeFieldsDumb(0).year-1970,this.monthCacheByYear={}}epochMilliseconds(n,e,t){return Yn(this.queryMonthCache(n)[0][e-1],t-1)}daysInMonth(n,e){const t=this.queryMonthCache(n)[0],o=t[e-1];e>=t.length&&(n++,e=0);return Dn(o,this.queryMonthCache(n)[0][e])}monthsInYear(n){return this.queryMonthCache(n)[0].length}monthCode(n,e){const t=this.queryLeapMonthByYear(e);return!t||n<t?super.monthCode(n,e):super.monthCode(n-1,e)+(n===t?"L":"")}convertMonthCode(n,e){const t=this.queryLeapMonthByYear(e);let o=/L$/.test(n),r=parseInt(n.substr(1)),i=!1;if(o){const n=Lo[this.id];if(void 0===n)throw new RangeError("Calendar system doesnt support leap months");if(n){if(r!==n-1)throw new RangeError("Invalid leap-month month code")}else if(r<=1||r>=12)throw new RangeError("Invalid leap-month month code")}return!o||t&&r===t-1||(i=!0,o=!1),(o||t&&r>=t)&&r++,[r,i]}inLeapYear(n){const e=qo(this,n);return e>qo(this,n-1)&&e>qo(this,n+1)}guessYearForMonthDay(n,e){let t=1970+this.yearCorrection;const o=t+100;for(;t<o;t++){const[o,r]=this.convertMonthCode(n,t);if(!r&&o<=this.monthsInYear(t)&&e<=this.daysInMonth(t,o))return t}throw new Error("Could not guess year")}normalizeISOYearForMonthDay(n){return n}computeFields(n){const e=this.computeFieldsDumb(n),t=this.queryMonthCache(e.year)[2];return{...e,month:t[e.month]}}computeFieldsDumb(n){const e=_e(this.format,n);let t,o,r=parseInt(e.relatedYear||e.year);var i;return e.era&&(i=this.id,void 0!==un[fn(i)])&&(t=et(e.era),o=r,r=hn(this.id,o,t,!0)),{era:t,eraYear:o,year:r,month:e.month,day:parseInt(e.day)}}queryLeapMonthByYear(n){const e=this.queryMonthCache(n),t=this.queryMonthCache(n-1),o=this.queryMonthCache(n+1);if(e[0].length>t[0].length&&e[0].length>o[0].length){const n=e[1],o=t[1];for(let e=0;e<o.length;e++)if(o[e]!==n[e])return e+1}}queryMonthCache(n){const{monthCacheByYear:e}=this;return e[n]||(e[n]=this.buildMonthCache(n))}buildMonthCache(n){const e=[],t=[],o={};let r=pn(this.guessISOYear(n),1,1);for(r=Yn(r,400);;){const o=this.computeFieldsDumb(r);if(o.year<n)break;r=Yn(r,1-o.day),o.year===n&&(e.unshift(r),t.unshift(o.month)),r=Yn(r,-1)}for(let n=0;n<t.length;n++)o[t[n]]=n+1;return[e,t,o]}guessISOYear(n){return n-this.yearCorrection}};function zo(n){return new tt("en-US",{calendar:n,era:"short",year:"numeric",month:"short",day:"numeric",timeZone:"UTC"})}var Ao=pn(1868,9,8),Wo={gregory:zn,japanese:class extends zn{constructor(){super(...arguments),this.format=zo("japanese")}computeFields(n){const e=super.computeFields(n);if(n>=Ao){const t=_e(this.format,n);e.era=et(t.era),e.eraYear=parseInt(t.relatedYear||t.year)}return e}},islamic:class extends $o{guessISOYear(n){return Math.ceil(32*n/33+622)}}},Ko={iso8601:mn};function Go(n){const e=(n=String(n)).toLocaleLowerCase();return Ko[e]||(Ko[e]=new(Wo[fn(e)]||$o)(n))}var Jo=pn(1582,10,15),Qo=pn(622,7,18),Vo={buddhist:Jo,japanese:Jo,roc:Jo,islamic:Qo,"islamic-rgsa":Qo,indian:0},Xo={};function _o(n,t){return nr(Number(n/e),t)}function nr(n,e){if(function(n,e){return function(n){let e=Xo[n];if(void 0===e){const t=Vo[n];if(void 0===t)e=!1;else{let o=Go(n);o instanceof $o||(o=new $o(n));const r=t-864e5,i=o.computeFields(r);e=r!==o.epochMilliseconds(i.year,i.month,i.day)}Xo[n]=e}return e}(e)&&n<Vo[e]}(n,e))throw new RangeError("Invalid timestamp for calendar")}function er(n,e,t){const o=7+e-t;return-A(bn(n,1,o)-e,7)+o-1}function tr(n,e,t){const o=er(n,e,t),r=er(n+1,e,t);return(qo(mn,n)-o+r)/7}var[or,rr]=v(),ir=class extends R{constructor(n){super(),"islamicc"===n&&(n="islamic-civil"),rr(this,Go(n))}static from(n){if("object"==typeof n&&n)return function(n){return n.calendar}(n)?function(n){if("object"==typeof n&&n){if("string"==typeof n.id)return n;throw new RangeError("Invalid calendar")}return new ir(String(n))}(n.calendar):n;const e=ke(String(n),!1,!0);return new ir(e?e.calendar||"iso8601":n)}get id(){return this.toString()}era(n){const e=jo(n,!0);return cr(or(this),e.isoYear,e.isoMonth,e.isoDay).era}eraYear(n){const e=jo(n,!0);return cr(or(this),e.isoYear,e.isoMonth,e.isoDay).eraYear}year(n){const e=jo(n,!0);return cr(or(this),e.isoYear,e.isoMonth,e.isoDay).year}month(n){const e=jo(n,!0);return cr(or(this),e.isoYear,e.isoMonth,e.isoDay).month}monthCode(n){const e=ko(n,this);return or(this).monthCode(e.month,e.year)}day(n){const e=jo(n);return cr(or(this),e.isoYear,e.isoMonth,e.isoDay).day}dayOfWeek(n){const e=jo(n,!0);return bn(e.isoYear,e.isoMonth,e.isoDay)}dayOfYear(n){const e=ko(n,this,!0);return Ho(or(this),e.year,e.month,e.day)}weekOfYear(n){const e=jo(n,!0);return function(n,e,t,o,r){const i=er(n,o,r),s=Math.floor((Ho(mn,n,e,t)-i-1)/7)+1;if(s<1)return s+tr(n-1,o,r);const a=tr(n,o,r);return s>a?s-a:s}(e.isoYear,e.isoMonth,e.isoDay,1,4)}daysInWeek(n){return jo(n,!0),7}daysInMonth(n){const e=ko(n,this,!0);return or(this).daysInMonth(e.year,e.month)}daysInYear(n){const e=ko(n,this,!0);return qo(or(this),e.year)}monthsInYear(n){const e=ko(n,this,!0);return or(this).monthsInYear(e.year)}inLeapYear(n){return or(this).inLeapYear(this.year(n))}dateFromFields(n,e){const t=xo(m(n,qn),or(this),e);return new lr(t.isoYear,t.isoMonth,t.isoDay,this)}yearMonthFromFields(n,e){const t=xo({...m(n,jn),day:1},or(this),e);return new ao(t.isoYear,t.isoMonth,this,t.isoDay)}monthDayFromFields(n,e){const t=or(this),o=m(n,Ln);let{era:r,eraYear:i,year:s,month:a,monthCode:c,day:u}=o;if(void 0===u)throw new TypeError("required property 'day' missing or undefined");if(void 0!==c?s=gn:void 0!==r&&void 0!==i&&(s=hn(t.id,i,r)),void 0===s){if(void 0===c)throw new TypeError("either year or monthCode required with month");s=t.guessYearForMonthDay(c,u)}const d=xo({year:s,month:a,monthCode:c,day:u},t,e);return new Ro(d.isoMonth,d.isoDay,this,t.normalizeISOYearForMonthDay(d.isoYear))}dateAdd(n,e,t){const o=or(this),r=function(n,e,t,o){n=le(n=fe(n,e.years,t,o),e.months,t,o);let r=t.epochMilliseconds(n.year,n.month,n.day);const i=Math.trunc(Number(tn(e))/s);return r=Yn(r,7*e.weeks+e.days+i),Mn(r)}(U(lr,n,t),U(To,e),o,h(t));return new lr(r.isoYear,r.isoMonth,r.isoDay,this)}dateUntil(n,e,t){const o=or(this),r=U(lr,n),i=U(lr,e),s=Y(g(t).largestUnit,6,6,9);return fr(this,dr(r,i)),Do(function(n,e,t,o){let r=0,i=0,s=0,a=0;switch(o){case 9:r=function(n,e,t){const[,o,r]=Pn(e.year,n.month,n.day,t,0),i=Un(e,n),s=j(e.month,o)||j(e.day,r);return e.year-n.year-(s&&i&&s!==i?i:0)}(n,e,t),n=fe(n,r,t,0);case 8:i=function(n,e,t){let o=0;const r=Un(e,n);if(r){let{year:i}=n;for(;i!==e.year;)o+=t.monthsInYear(i)*r,i+=r;const[,s,a]=Pn(e.year,n.month,n.day,t,0);o+=e.month-s;const c=j(e.day,a);c&&r&&c!==r&&(o-=r)}return o}(n,e,t),n=le(n,i,t,0)}a=Dn(t.epochMilliseconds(n.year,n.month,n.day),t.epochMilliseconds(e.year,e.month,e.day)),7===o&&(s=Math.trunc(a/7),a%=7);return J({years:r,months:i,weeks:s,days:a,hours:0,minutes:0,seconds:0,milliseconds:0,microseconds:0,nanoseconds:0})}(r,i,o,s))}fields(n){return n.slice()}mergeFields(n,e){return ar(n,e)}toString(){return or(this).id}};function sr(){return new ir("iso8601")}function ar(n,e){const t={...n,...e};if(void 0!==n.year){delete t.era,delete t.eraYear,delete t.year;let o=!1;void 0===e.era&&void 0===e.eraYear||(t.era=e.era,t.eraYear=e.eraYear,o=!0),void 0!==e.year&&(t.year=e.year,o=!0),o||(t.year=n.year)}if(void 0!==n.monthCode){delete t.monthCode,delete t.month;let o=!1;void 0!==e.month&&(t.month=e.month,o=!0),void 0!==e.monthCode&&(t.monthCode=e.monthCode,o=!0),o||(t.monthCode=n.monthCode)}return void 0!==n.day&&(t.day=e.day??n.day),t}function cr(n,e,t,o){const r=pn(e,t,o);return nr(r,n.id),n.computeFields(r)}function ur(n){return void 0===n.calendar?sr():U(ir,n.calendar)}function dr(n,e){const{calendar:t}=n;return fr(t,e.calendar),t}function hr(n,e){const t=n.calendar,o=e.calendar;if("iso8601"===t.id)return o;if("iso8601"===o.id)return t;if(t.id!==o.id)throw new RangeError("Non-ISO calendars incompatible");return t}function fr(n,e){if(n.id!==e.id)throw new RangeError("Calendars must match")}de(ir,"Calendar");var lr=class extends x{constructor(n,e,t,o=sr()){const r=Bn({isoYear:n,isoMonth:e,isoDay:t},1),i=U(ir,o);!function(n,e){const t=yn(n);xt(t+(t<0n?86399999999999n:0n)),_o(t,e)}(r,i.id),super({...r,calendar:i})}static from(n,e){return h(e),n instanceof lr?mr(n.getISOFields()):"object"==typeof n?gt(n,e):mr(Je(Ce(String(n))))}static compare(n,e){return Zn(U(lr,n),U(lr,e))}with(n,e){return It(this,n,e)}withCalendar(n){const e=this.getISOFields();return new lr(e.isoYear,e.isoMonth,e.isoDay,n)}add(n,e){return this.calendar.dateAdd(this,n,e)}subtract(n,e){return this.calendar.dateAdd(this,U(To,n).negated(),e)}until(n,e){return gr(this,U(lr,n),!1,e)}since(n,e){return gr(this,U(lr,n),!0,e)}equals(n){return!Zn(this,U(lr,n))}toString(n){const e=An(n),t=this.getISOFields();return Qn(t)+ne(t.calendar.toString(),e)}toZonedDateTime(n){const e=function(n){let e,t;if("string"==typeof n)t=n;else{if("object"!=typeof n)throw new TypeError("Invalid options/timeZone argument");if(void 0!==n.id?t=n:(t=n.timeZone,e=n.plainTime),void 0===t)throw new TypeError("Invalid timeZone argument")}return{plainTime:e,timeZone:t}}(n),t=U(ht,e.timeZone),o=void 0===e.plainTime?void 0:U(eo,e.plainTime);return go({...this.getISOFields(),...o?o.getISOFields():X,timeZone:t})}toPlainDateTime(n){return Zo({...this.getISOFields(),...oo(n).getISOFields()})}toPlainYearMonth(){return co(this.getISOFields())}toPlainMonthDay(){return this.calendar.monthDayFromFields(this)}};function mr(n){return new lr(n.isoYear,n.isoMonth,n.isoDay,n.calendar)}function gr(n,e,t,o){return Do(wr(n,e,dr(n,e),t,E(o,6,6,6,9)))}function yr(n,e,t,o,r){return bo(pr(n,e,t,r.largestUnit),n,e,t,o,r)}function wr(n,e,t,o,r){return bo(t.dateUntil(n,e,{largestUnit:N[r.largestUnit]}),n,e,t,o,r)}function pr(n,e,t,o){if(!d(o))return vr(n,e,o);const r=mr({...n.getISOFields(),calendar:t});let i,s,a,c,u,h=mr({...e.getISOFields(),calendar:t});do{s=t.dateUntil(r,h,{largestUnit:N[o]}),i=n.add(s),a=vr(i,e,5),c=s.sign,u=a.sign}while(c&&u&&c!==u&&(h=h.add({days:u})));return l=a,{sign:(f=s).sign||l.sign,years:f.years+l.years,months:f.months+l.months,weeks:f.weeks+l.weeks,days:f.days+l.days,hours:f.hours+l.hours,minutes:f.minutes+l.minutes,seconds:f.seconds+l.seconds,milliseconds:f.milliseconds+l.milliseconds,microseconds:f.microseconds+l.microseconds,nanoseconds:f.nanoseconds+l.nanoseconds};var f,l}function vr(n,e,t){return rn(In(e)-In(n),t)}de(lr,"PlainDate"),se(lr),ue(lr,ce),Qt(lr,At({year:"numeric",month:"numeric",day:"numeric",weekday:void 0},{hour:void 0,minute:void 0,second:void 0}));var[Mr,Ir]=v(),Sr=class extends P{constructor(n){if(super(),"number"==typeof n)throw new TypeError("Must supply bigint, not number");var e;n=BigInt(n),((e=n)<-8640000000000000000000n||e>8640000000000000000000n)&&Tn(),Ir(this,n)}static from(n){if(n instanceof Sr)return new Sr(n.epochNanoseconds);const e=Ze(String(n)),t=e.offsetNanoseconds;if(void 0===t)throw new RangeError("Must specify an offset");return new Sr(yn(kn(e,1))-BigInt(t))}static fromEpochSeconds(n){return new Sr(BigInt(n)*t)}static fromEpochMilliseconds(n){return new Sr(BigInt(n)*e)}static fromEpochMicroseconds(e){return new Sr(e*n)}static fromEpochNanoseconds(n){return new Sr(n)}static compare(n,e){return Rn(U(Sr,n),U(Sr,e))}get epochNanoseconds(){return Mr(this)}add(n){return new Sr(ge(this.epochNanoseconds,U(To,n)))}subtract(n){return new Sr(ge(this.epochNanoseconds,K(U(To,n))))}until(n,e){return Fr(this,U(Sr,n),e)}since(n,e){return Fr(U(Sr,n),this,e)}round(n){const e=Z(n,void 0,0,5,!0);return new Sr(Ht(this.epochNanoseconds,e))}equals(n){return!Rn(this,U(Sr,n))}toString(n){const e=g(n).timeZone;return this.toZonedDateTimeISO(e??"UTC").toString({...n,offset:void 0===e?"never":"auto",timeZoneName:"never"})+(void 0===e?"Z":"")}toZonedDateTimeISO(n){return new mo(this.epochNanoseconds,n)}toZonedDateTime(n){if(!w(n))throw new TypeError("Must specify options");if(void 0===n.calendar)throw new TypeError("Must specify a calendar");if(void 0===n.timeZone)throw new TypeError("Must specify a timeZone");return new mo(this.epochNanoseconds,n.timeZone,n.calendar)}};function Fr(n,e,t){const o=E(t,3,0,0,5);return Do(function(n,e,t){return rn(z(e-n,a[t.smallestUnit]*t.roundingIncrement,t.roundingFunc),t.largestUnit)}(n.epochNanoseconds,e.epochNanoseconds,o))}function br(n){return Sr.fromEpochMilliseconds(n.valueOf())}de(Sr,"Instant"),oe(Sr),Qt(Sr,$t({year:"numeric",month:"numeric",day:"numeric",weekday:void 0,hour:"numeric",minute:"2-digit",second:"2-digit"},{timeZoneName:void 0},{}));var Nr=Symbol(),Or=Symbol(),Tr=Symbol(),Dr=class extends tt{constructor(n,e){const t=ot(n),o=function(n){const e={};for(const t in n){let o=n[t];w(o)&&(o=o.toString()),e[t]=o}return e}(e||{});super(t,o),this[Nr]=t,this[Or]=o,this[Tr]=new Map}format(n){const e=Yr(this,n);return e[0]===this?super.format(n):e[0].format(e[1])}formatToParts(n){return super.formatToParts.call(...Yr(this,n))}formatRange(n,e){return super.formatRange.call(...Er(this,n,e))}formatRangeToParts(n,e){return super.formatRangeToParts.call(...Er(this,n,e))}};function Yr(n,e){const t=Vt(e);if(t){const o=Zr(n,t);return[o.buildFormat(e),o.buildEpochMilli(e)]}return[n,e]}function Er(n,e,t){const o=Vt(e);if(o!==Vt(t))throw new TypeError("Mismatch of types");if(o){const r=Zr(n,o);return[r.buildFormat(e,t),r.buildEpochMilli(e),r.buildEpochMilli(t)]}return[n,e,t]}function Zr(n,e){const t=n[Tr];let o=t.get(e);return o||(o=function(n){const e={};return{buildFormat:function(t,o){const r=n.buildKey(t,o),i=r.join("|");return e[i]||(e[i]=n.buildFormat(...r))},buildEpochMilli:n.buildEpochMilli}}(e(n[Nr],n[Or])),t.set(e,o)),o}var Cr={zonedDateTimeISO:function(n){return go(Rr("iso8601",n))},zonedDateTime:function(n,e){return go(Rr(n,e))},plainDateTimeISO:function(n){return Zo(Rr("iso8601",n))},plainDateTime:function(n,e){return Zo(Rr(n,e))},plainDateISO:function(n){return mr(Rr("iso8601",n))},plainDate:function(n,e){return mr(Rr(n,e))},plainTimeISO:function(n){return to(Rr("iso8601",n))},instant:function(){return new Sr(Pr())},timeZone:Ur};function Ur(){return new ht((new tt).resolvedOptions().timeZone)}function Rr(n,e=Ur()){const t=U(ht,e);return{...yo(Pr(),t)[0],timeZone:t,calendar:U(ir,n)}}function Pr(){return BigInt(Date.now())*e}de(Cr,"Now");
//# sourceMappingURL=impl.js.map

/***/ }),

/***/ "./node_modules/temporal-polyfill/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/temporal-polyfill/dist/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Calendar": () => (/* binding */ s),
/* harmony export */   "Duration": () => (/* binding */ D),
/* harmony export */   "Instant": () => (/* binding */ T),
/* harmony export */   "Now": () => (/* binding */ P),
/* harmony export */   "PlainDate": () => (/* binding */ i),
/* harmony export */   "PlainDateTime": () => (/* binding */ m),
/* harmony export */   "PlainMonthDay": () => (/* binding */ o),
/* harmony export */   "PlainTime": () => (/* binding */ l),
/* harmony export */   "PlainYearMonth": () => (/* binding */ e),
/* harmony export */   "TimeZone": () => (/* binding */ p),
/* harmony export */   "ZonedDateTime": () => (/* binding */ r),
/* harmony export */   "dateToTemporalInstant": () => (/* binding */ d)
/* harmony export */ });
/* harmony import */ var _impl_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./impl.js */ "./node_modules/temporal-polyfill/dist/impl.js");
var n=globalThis.Temporal,t=n||_impl_js__WEBPACK_IMPORTED_MODULE_0__,e=t.PlainYearMonth,o=t.PlainMonthDay,i=t.PlainDate,l=t.PlainTime,m=t.PlainDateTime,r=t.ZonedDateTime,T=t.Instant,s=t.Calendar,p=t.TimeZone,D=t.Duration,P=t.Now,d=n?a=>a.toTemporalInstant():_impl_js__WEBPACK_IMPORTED_MODULE_0__.dateToTemporalInstant;
//# sourceMappingURL=index.js.map

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "./";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _styles_main_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../styles/main.scss */ "./src/styles/main.scss");
/* harmony import */ var temporal_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! temporal-polyfill */ "./node_modules/temporal-polyfill/dist/index.js");
/* harmony import */ var _geocode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./geocode */ "./src/js/geocode.js");
/* harmony import */ var _weather__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./weather */ "./src/js/weather.js");
/* harmony import */ var _fillers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fillers */ "./src/js/fillers.js");
/* harmony import */ var _getters__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getters */ "./src/js/getters.js");







// Add:
// Precipitation

const tickClockElement = () => {
  const clock = document.getElementById('clock');
  clock.dateTime = temporal_polyfill__WEBPACK_IMPORTED_MODULE_1__.Now.instant().toString();
  clock.textContent = (0,_getters__WEBPACK_IMPORTED_MODULE_5__.getDateTimeString)();
};

const updateWeatherData = (lat, lon, name) => {
  (0,_weather__WEBPACK_IMPORTED_MODULE_3__.getWeatherData)(lat, lon).then((data) => {
    const { current, daily } = data;
    const iconCode = current.weather[0].icon;
    const weather = (0,_getters__WEBPACK_IMPORTED_MODULE_5__.getDescriptionFromWeatherData)(current.weather[0]);
    const temps = (0,_getters__WEBPACK_IMPORTED_MODULE_5__.getTempsFromWeatherData)({ current, daily: daily[0] });
    const wind = (0,_getters__WEBPACK_IMPORTED_MODULE_5__.getWindFromWeatherData)(current);
    const details = (0,_getters__WEBPACK_IMPORTED_MODULE_5__.getDetailsFromWeatherData)(current);
    const weatherData = {
      name, weather, temps, wind, details, iconCode, daily,
    };

    (0,_fillers__WEBPACK_IMPORTED_MODULE_4__.fillPageWithWeatherData)(weatherData);
  });
};

const updateWeatherDataWithQuery = async (query) => {
  const [lat, lon, name] = await (0,_geocode__WEBPACK_IMPORTED_MODULE_2__["default"])(query).then((geoData) => {
    const queryData = geoData.data[0];
    return [queryData.latitude, queryData.longitude, queryData.name];
  });

  updateWeatherData(lat, lon, name);
};

// Initialize App

// Call once for initial load.
tickClockElement();
let lastQuery = 'Dallas';
updateWeatherDataWithQuery(lastQuery);

document.getElementById('submit').onclick = async () => {
  const search = document.getElementById('search');
  const query = search.value;
  lastQuery = query;
  search.value = '';

  updateWeatherDataWithQuery(query);
};

// Update weather every minute.
setInterval(async () => {
  updateWeatherDataWithQuery(lastQuery);
}, 60000);

// Update clock every second.
setInterval(() => {
  tickClockElement();
}, 1000);

// Hide main element on load, until all promises are resolved.

})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,